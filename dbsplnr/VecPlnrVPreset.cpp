/**
  * \file VecPlnrVPreset.cpp
  * vector VecPlnrVPreset (implementation)
  * \author Alexander Wirthmueller
  * \date created: 4 Dec 2015
  * \date modified: 4 Dec 2015
  */

#include "VecPlnrVPreset.h"

/******************************************************************************
 namespace VecPlnrVPreset
 ******************************************************************************/

uint VecPlnrVPreset::getIx(
			const string& sref
		) {
	string s = StrMod::lc(sref);

	if (s == "void") return VOID;
	else if (s == "preplnradm") return PREPLNRADM;
	else if (s == "preplnrariamarrayenv.x2") return PREPLNRARIAMARRAYENV_X2;
	else if (s == "preplnrarilist.arr") return PREPLNRARILIST_ARR;
	else if (s == "preplnrarilist.dsn") return PREPLNRARILIST_DSN;
	else if (s == "preplnrarilist.i") return PREPLNRARILIST_I;
	else if (s == "preplnrarilist.j") return PREPLNRARILIST_J;
	else if (s == "preplnrarilist.k") return PREPLNRARILIST_K;
	else if (s == "preplnrarilist.l") return PREPLNRARILIST_L;
	else if (s == "preplnrarilist.m") return PREPLNRARILIST_M;
	else if (s == "preplnrarilist.n") return PREPLNRARILIST_N;
	else if (s == "preplnrarraenv.x1") return PREPLNRARRAENV_X1;
	else if (s == "preplnrarraenv.x2") return PREPLNRARRAENV_X2;
	else if (s == "preplnrarrlist.dsn") return PREPLNRARRLIST_DSN;
	else if (s == "preplnrarrlist.srf") return PREPLNRARRLIST_SRF;
	else if (s == "preplnrarrlist.tpo") return PREPLNRARRLIST_TPO;
	else if (s == "preplnrclcaenv.x1") return PREPLNRCLCAENV_X1;
	else if (s == "preplnrclcaenv.x2") return PREPLNRCLCAENV_X2;
	else if (s == "preplnrclcapar.x1") return PREPLNRCLCAPAR_X1;
	else if (s == "preplnrclcapar.x2") return PREPLNRCLCAPAR_X2;
	else if (s == "preplnrclcapar.x3") return PREPLNRCLCAPAR_X3;
	else if (s == "preplnrclclist.dim") return PREPLNRCLCLIST_DIM;
	else if (s == "preplnrclclist.dsn") return PREPLNRCLCLIST_DSN;
	else if (s == "preplnrclclist.prj") return PREPLNRCLCLIST_PRJ;
	else if (s == "preplnrclclist.sup") return PREPLNRCLCLIST_SUP;
	else if (s == "preplnrclclist.tit") return PREPLNRCLCLIST_TIT;
	else if (s == "preplnrclclist.tpl") return PREPLNRCLCLIST_TPL;
	else if (s == "preplnrclcmnfile.x1") return PREPLNRCLCMNFILE_X1;
	else if (s == "preplnrcliaamcalcenv.x2") return PREPLNRCLIAAMCALCENV_X2;
	else if (s == "preplnrcliaamcalcpar.x2") return PREPLNRCLIAAMCALCPAR_X2;
	else if (s == "preplnrcliaamcalcpar.x3") return PREPLNRCLIAAMCALCPAR_X3;
	else if (s == "preplnrclilist.cal") return PREPLNRCLILIST_CAL;
	else if (s == "preplnrclilist.dsn") return PREPLNRCLILIST_DSN;
	else if (s == "preplnrclilist.tit") return PREPLNRCLILIST_TIT;
	else if (s == "preplnrctpaenv.x1") return PREPLNRCTPAENV_X1;
	else if (s == "preplnrctpaenv.x2") return PREPLNRCTPAENV_X2;
	else if (s == "preplnrctpapar.x1") return PREPLNRCTPAPAR_X1;
	else if (s == "preplnrctpapar.x2") return PREPLNRCTPAPAR_X2;
	else if (s == "preplnrctpapar.x3") return PREPLNRCTPAPAR_X3;
	else if (s == "preplnrctplist.dim") return PREPLNRCTPLIST_DIM;
	else if (s == "preplnrctplist.dsn") return PREPLNRCTPLIST_DSN;
	else if (s == "preplnrctplist.prj") return PREPLNRCTPLIST_PRJ;
	else if (s == "preplnrctplist.sup") return PREPLNRCTPLIST_SUP;
	else if (s == "preplnrctplist.tit") return PREPLNRCTPLIST_TIT;
	else if (s == "preplnrctplist.tpl") return PREPLNRCTPLIST_TPL;
	else if (s == "preplnrctpmnfile.x1") return PREPLNRCTPMNFILE_X1;
	else if (s == "preplnrdgdlist.dsn") return PREPLNRDGDLIST_DSN;
	else if (s == "preplnrdgdlist.srf") return PREPLNRDGDLIST_SRF;
	else if (s == "preplnrdgdlist.typ") return PREPLNRDGDLIST_TYP;
	else if (s == "preplnrdomlist.dsn") return PREPLNRDOMLIST_DSN;
	else if (s == "preplnrdomlist.srf") return PREPLNRDOMLIST_SRF;
	else if (s == "preplnrdomlist.typ") return PREPLNRDOMLIST_TYP;
	else if (s == "preplnrdsnhk1narcguide.x1") return PREPLNRDSNHK1NARCGUIDE_X1;
	else if (s == "preplnrdsnhk1nlayer.x1") return PREPLNRDSNHK1NLAYER_X1;
	else if (s == "preplnrdsnhk1nlevel.x1") return PREPLNRDSNHK1NLEVEL_X1;
	else if (s == "preplnrdsnhk1nlineguide.x1") return PREPLNRDSNHK1NLINEGUIDE_X1;
	else if (s == "preplnrdsnhk1nvertex.x1") return PREPLNRDSNHK1NVERTEX_X1;
	else if (s == "preplnrdsnlist.dim") return PREPLNRDSNLIST_DIM;
	else if (s == "preplnrdsnlist.drv") return PREPLNRDSNLIST_DRV;
	else if (s == "preplnrdsnlist.mod") return PREPLNRDSNLIST_MOD;
	else if (s == "preplnrdsnlist.mty") return PREPLNRDSNLIST_MTY;
	else if (s == "preplnrdsnlist.prj") return PREPLNRDSNLIST_PRJ;
	else if (s == "preplnrdsnlist.ret") return PREPLNRDSNLIST_RET;
	else if (s == "preplnrdsnlist.reu") return PREPLNRDSNLIST_REU;
	else if (s == "preplnrdsnlist.typ") return PREPLNRDSNLIST_TYP;
	else if (s == "preplnrdtpapar.x1") return PREPLNRDTPAPAR_X1;
	else if (s == "preplnrdtpapar.x2") return PREPLNRDTPAPAR_X2;
	else if (s == "preplnrdtphk1narcguide.opr.x1") return PREPLNRDTPHK1NARCGUIDE_OPR_X1;
	else if (s == "preplnrdtphk1narcguide.x1") return PREPLNRDTPHK1NARCGUIDE_X1;
	else if (s == "preplnrdtphk1nlineguide.opr.x1") return PREPLNRDTPHK1NLINEGUIDE_OPR_X1;
	else if (s == "preplnrdtphk1nlineguide.x1") return PREPLNRDTPHK1NLINEGUIDE_X1;
	else if (s == "preplnrdtphk1nvertex.opr.x1") return PREPLNRDTPHK1NVERTEX_OPR_X1;
	else if (s == "preplnrdtphk1nvertex.x1") return PREPLNRDTPHK1NVERTEX_X1;
	else if (s == "preplnrdtplist.dsn") return PREPLNRDTPLIST_DSN;
	else if (s == "preplnrdtplist.srf") return PREPLNRDTPLIST_SRF;
	else if (s == "preplnrdtplist.sup") return PREPLNRDTPLIST_SUP;
	else if (s == "preplnrdtplist.tpl") return PREPLNRDTPLIST_TPL;
	else if (s == "preplnrdvcapar.x1") return PREPLNRDVCAPAR_X1;
	else if (s == "preplnrdvcapar.x2") return PREPLNRDVCAPAR_X2;
	else if (s == "preplnrdvchk1narcguide.opr.x1") return PREPLNRDVCHK1NARCGUIDE_OPR_X1;
	else if (s == "preplnrdvchk1narcguide.x1") return PREPLNRDVCHK1NARCGUIDE_X1;
	else if (s == "preplnrdvchk1nlineguide.opr.x1") return PREPLNRDVCHK1NLINEGUIDE_OPR_X1;
	else if (s == "preplnrdvchk1nlineguide.x1") return PREPLNRDVCHK1NLINEGUIDE_X1;
	else if (s == "preplnrdvchk1nvertex.opr.x1") return PREPLNRDVCHK1NVERTEX_OPR_X1;
	else if (s == "preplnrdvchk1nvertex.x1") return PREPLNRDVCHK1NVERTEX_X1;
	else if (s == "preplnrdvclist.dsn") return PREPLNRDVCLIST_DSN;
	else if (s == "preplnrdvclist.srf") return PREPLNRDVCLIST_SRF;
	else if (s == "preplnrdvclist.sup") return PREPLNRDVCLIST_SUP;
	else if (s == "preplnrdvclist.tpl") return PREPLNRDVCLIST_TPL;
	else if (s == "preplnrfillist.fnm") return PREPLNRFILLIST_FNM;
	else if (s == "preplnrfillist.ret") return PREPLNRFILLIST_RET;
	else if (s == "preplnrfillist.reu") return PREPLNRFILLIST_REU;
	else if (s == "preplnrfilmncalc.x1") return PREPLNRFILMNCALC_X1;
	else if (s == "preplnrgrp") return PREPLNRGRP;
	else if (s == "preplnrip") return PREPLNRIP;
	else if (s == "preplnrixacc") return PREPLNRIXACC;
	else if (s == "preplnrixlcl") return PREPLNRIXLCL;
	else if (s == "preplnrixord") return PREPLNRIXORD;
	else if (s == "preplnrixpre") return PREPLNRIXPRE;
	else if (s == "preplnrixuacari") return PREPLNRIXUACARI;
	else if (s == "preplnrixuacarr") return PREPLNRIXUACARR;
	else if (s == "preplnrixuacclc") return PREPLNRIXUACCLC;
	else if (s == "preplnrixuaccli") return PREPLNRIXUACCLI;
	else if (s == "preplnrixuacctp") return PREPLNRIXUACCTP;
	else if (s == "preplnrixuacdgd") return PREPLNRIXUACDGD;
	else if (s == "preplnrixuacdom") return PREPLNRIXUACDOM;
	else if (s == "preplnrixuacdsn") return PREPLNRIXUACDSN;
	else if (s == "preplnrixuacdtp") return PREPLNRIXUACDTP;
	else if (s == "preplnrixuacdvc") return PREPLNRIXUACDVC;
	else if (s == "preplnrixuacfil") return PREPLNRIXUACFIL;
	else if (s == "preplnrixuaclyr") return PREPLNRIXUACLYR;
	else if (s == "preplnrixuacmat") return PREPLNRIXUACMAT;
	else if (s == "preplnrixuacprj") return PREPLNRIXUACPRJ;
	else if (s == "preplnrixuacprs") return PREPLNRIXUACPRS;
	else if (s == "preplnrixuacrtc") return PREPLNRIXUACRTC;
	else if (s == "preplnrixuacsru") return PREPLNRIXUACSRU;
	else if (s == "preplnrixuacstk") return PREPLNRIXUACSTK;
	else if (s == "preplnrixuactpo") return PREPLNRIXUACTPO;
	else if (s == "preplnrixuacusg") return PREPLNRIXUACUSG;
	else if (s == "preplnrixuacusr") return PREPLNRIXUACUSR;
	else if (s == "preplnrjrefnotify") return PREPLNRJREFNOTIFY;
	else if (s == "preplnrjrefsess") return PREPLNRJREFSESS;
	else if (s == "preplnrlyrlist.hkt") return PREPLNRLYRLIST_HKT;
	else if (s == "preplnrlyrlist.hku") return PREPLNRLYRLIST_HKU;
	else if (s == "preplnrlyrlist.mat") return PREPLNRLYRLIST_MAT;
	else if (s == "preplnrlyrlist.srf") return PREPLNRLYRLIST_SRF;
	else if (s == "preplnrlyrlist.tty") return PREPLNRLYRLIST_TTY;
	else if (s == "preplnrlyrlist.typ") return PREPLNRLYRLIST_TYP;
	else if (s == "preplnrmat1nlayer.x1") return PREPLNRMAT1NLAYER_X1;
	else if (s == "preplnrmatapar.x1") return PREPLNRMATAPAR_X1;
	else if (s == "preplnrmatapar.x2") return PREPLNRMATAPAR_X2;
	else if (s == "preplnrmatapar.x3") return PREPLNRMATAPAR_X3;
	else if (s == "preplnrmatlist.cal") return PREPLNRMATLIST_CAL;
	else if (s == "preplnrmatlist.srf") return PREPLNRMATLIST_SRF;
	else if (s == "preplnrmatlist.sup") return PREPLNRMATLIST_SUP;
	else if (s == "preplnrmatlist.tit") return PREPLNRMATLIST_TIT;
	else if (s == "preplnrmatlist.typ") return PREPLNRMATLIST_TYP;
	else if (s == "preplnrown") return PREPLNROWN;
	else if (s == "preplnrprjlist.tit") return PREPLNRPRJLIST_TIT;
	else if (s == "preplnrprsadetail.x1") return PREPLNRPRSADETAIL_X1;
	else if (s == "preplnrprslist.grp") return PREPLNRPRSLIST_GRP;
	else if (s == "preplnrprslist.lnm") return PREPLNRPRSLIST_LNM;
	else if (s == "preplnrprslist.own") return PREPLNRPRSLIST_OWN;
	else if (s == "preplnrrefagd") return PREPLNRREFAGD;
	else if (s == "preplnrrefari") return PREPLNRREFARI;
	else if (s == "preplnrrefarr") return PREPLNRREFARR;
	else if (s == "preplnrrefblk") return PREPLNRREFBLK;
	else if (s == "preplnrrefcal") return PREPLNRREFCAL;
	else if (s == "preplnrrefclc") return PREPLNRREFCLC;
	else if (s == "preplnrrefcli") return PREPLNRREFCLI;
	else if (s == "preplnrrefctp") return PREPLNRREFCTP;
	else if (s == "preplnrrefdev") return PREPLNRREFDEV;
	else if (s == "preplnrrefdgd") return PREPLNRREFDGD;
	else if (s == "preplnrrefdom") return PREPLNRREFDOM;
	else if (s == "preplnrrefdsn") return PREPLNRREFDSN;
	else if (s == "preplnrrefdtp") return PREPLNRREFDTP;
	else if (s == "preplnrrefdvc") return PREPLNRREFDVC;
	else if (s == "preplnrreffce") return PREPLNRREFFCE;
	else if (s == "preplnrreffil") return PREPLNRREFFIL;
	else if (s == "preplnrreflgd") return PREPLNRREFLGD;
	else if (s == "preplnrreflvl") return PREPLNRREFLVL;
	else if (s == "preplnrreflyr") return PREPLNRREFLYR;
	else if (s == "preplnrrefmat") return PREPLNRREFMAT;
	else if (s == "preplnrrefmoddsn") return PREPLNRREFMODDSN;
	else if (s == "preplnrrefprj") return PREPLNRREFPRJ;
	else if (s == "preplnrrefprs") return PREPLNRREFPRS;
	else if (s == "preplnrrefrtc") return PREPLNRREFRTC;
	else if (s == "preplnrrefsel") return PREPLNRREFSEL;
	else if (s == "preplnrrefses") return PREPLNRREFSES;
	else if (s == "preplnrrefsru") return PREPLNRREFSRU;
	else if (s == "preplnrrefssubdev") return PREPLNRREFSSUBDEV;
	else if (s == "preplnrrefstk") return PREPLNRREFSTK;
	else if (s == "preplnrreftpo") return PREPLNRREFTPO;
	else if (s == "preplnrrefusg") return PREPLNRREFUSG;
	else if (s == "preplnrrefusr") return PREPLNRREFUSR;
	else if (s == "preplnrrefvtx") return PREPLNRREFVTX;
	else if (s == "preplnrrtclist.dsn") return PREPLNRRTCLIST_DSN;
	else if (s == "preplnrrtclist.hkt") return PREPLNRRTCLIST_HKT;
	else if (s == "preplnrrtclist.hku") return PREPLNRRTCLIST_HKU;
	else if (s == "preplnrrtclist.lyr") return PREPLNRRTCLIST_LYR;
	else if (s == "preplnrrtclist.srf") return PREPLNRRTCLIST_SRF;
	else if (s == "preplnrsess") return PREPLNRSESS;
	else if (s == "preplnrsrulist.hkt") return PREPLNRSRULIST_HKT;
	else if (s == "preplnrsrulist.hku") return PREPLNRSRULIST_HKU;
	else if (s == "preplnrsrulist.srf") return PREPLNRSRULIST_SRF;
	else if (s == "preplnrsrusru1nface.opr.x1") return PREPLNRSRUSRU1NFACE_OPR_X1;
	else if (s == "preplnrsrusru1nface.x1") return PREPLNRSRUSRU1NFACE_X1;
	else if (s == "preplnrstkhk1nlayer.x1") return PREPLNRSTKHK1NLAYER_X1;
	else if (s == "preplnrstkhk1nlevel.x1") return PREPLNRSTKHK1NLEVEL_X1;
	else if (s == "preplnrstklist.dsn") return PREPLNRSTKLIST_DSN;
	else if (s == "preplnrstklist.srf") return PREPLNRSTKLIST_SRF;
	else if (s == "preplnrstklist.typ") return PREPLNRSTKLIST_TYP;
	else if (s == "preplnrsysdate") return PREPLNRSYSDATE;
	else if (s == "preplnrsysstamp") return PREPLNRSYSSTAMP;
	else if (s == "preplnrsystime") return PREPLNRSYSTIME;
	else if (s == "preplnrtpolist.tit") return PREPLNRTPOLIST_TIT;
	else if (s == "preplnrtpolist.typ") return PREPLNRTPOLIST_TYP;
	else if (s == "preplnrusgaaccess.x1") return PREPLNRUSGAACCESS_X1;
	else if (s == "preplnrusglist.srf") return PREPLNRUSGLIST_SRF;
	else if (s == "preplnrusraaccess.x1") return PREPLNRUSRAACCESS_X1;
	else if (s == "preplnrusrlist.prs") return PREPLNRUSRLIST_PRS;
	else if (s == "preplnrusrlist.srf") return PREPLNRUSRLIST_SRF;
	else if (s == "preplnrusrlist.usg") return PREPLNRUSRLIST_USG;

	return(0);
};

string VecPlnrVPreset::getSref(
			const uint ix
		) {
	if (ix == VOID) return("void");
	else if (ix == PREPLNRADM) return("PrePlnrAdm");
	else if (ix == PREPLNRARIAMARRAYENV_X2) return("PrePlnrAriAMArrayEnv.x2");
	else if (ix == PREPLNRARILIST_ARR) return("PrePlnrAriList.arr");
	else if (ix == PREPLNRARILIST_DSN) return("PrePlnrAriList.dsn");
	else if (ix == PREPLNRARILIST_I) return("PrePlnrAriList.i");
	else if (ix == PREPLNRARILIST_J) return("PrePlnrAriList.j");
	else if (ix == PREPLNRARILIST_K) return("PrePlnrAriList.k");
	else if (ix == PREPLNRARILIST_L) return("PrePlnrAriList.l");
	else if (ix == PREPLNRARILIST_M) return("PrePlnrAriList.m");
	else if (ix == PREPLNRARILIST_N) return("PrePlnrAriList.n");
	else if (ix == PREPLNRARRAENV_X1) return("PrePlnrArrAEnv.x1");
	else if (ix == PREPLNRARRAENV_X2) return("PrePlnrArrAEnv.x2");
	else if (ix == PREPLNRARRLIST_DSN) return("PrePlnrArrList.dsn");
	else if (ix == PREPLNRARRLIST_SRF) return("PrePlnrArrList.srf");
	else if (ix == PREPLNRARRLIST_TPO) return("PrePlnrArrList.tpo");
	else if (ix == PREPLNRCLCAENV_X1) return("PrePlnrClcAEnv.x1");
	else if (ix == PREPLNRCLCAENV_X2) return("PrePlnrClcAEnv.x2");
	else if (ix == PREPLNRCLCAPAR_X1) return("PrePlnrClcAPar.x1");
	else if (ix == PREPLNRCLCAPAR_X2) return("PrePlnrClcAPar.x2");
	else if (ix == PREPLNRCLCAPAR_X3) return("PrePlnrClcAPar.x3");
	else if (ix == PREPLNRCLCLIST_DIM) return("PrePlnrClcList.dim");
	else if (ix == PREPLNRCLCLIST_DSN) return("PrePlnrClcList.dsn");
	else if (ix == PREPLNRCLCLIST_PRJ) return("PrePlnrClcList.prj");
	else if (ix == PREPLNRCLCLIST_SUP) return("PrePlnrClcList.sup");
	else if (ix == PREPLNRCLCLIST_TIT) return("PrePlnrClcList.tit");
	else if (ix == PREPLNRCLCLIST_TPL) return("PrePlnrClcList.tpl");
	else if (ix == PREPLNRCLCMNFILE_X1) return("PrePlnrClcMNFile.x1");
	else if (ix == PREPLNRCLIAAMCALCENV_X2) return("PrePlnrCliAAMCalcEnv.x2");
	else if (ix == PREPLNRCLIAAMCALCPAR_X2) return("PrePlnrCliAAMCalcPar.x2");
	else if (ix == PREPLNRCLIAAMCALCPAR_X3) return("PrePlnrCliAAMCalcPar.x3");
	else if (ix == PREPLNRCLILIST_CAL) return("PrePlnrCliList.cal");
	else if (ix == PREPLNRCLILIST_DSN) return("PrePlnrCliList.dsn");
	else if (ix == PREPLNRCLILIST_TIT) return("PrePlnrCliList.tit");
	else if (ix == PREPLNRCTPAENV_X1) return("PrePlnrCtpAEnv.x1");
	else if (ix == PREPLNRCTPAENV_X2) return("PrePlnrCtpAEnv.x2");
	else if (ix == PREPLNRCTPAPAR_X1) return("PrePlnrCtpAPar.x1");
	else if (ix == PREPLNRCTPAPAR_X2) return("PrePlnrCtpAPar.x2");
	else if (ix == PREPLNRCTPAPAR_X3) return("PrePlnrCtpAPar.x3");
	else if (ix == PREPLNRCTPLIST_DIM) return("PrePlnrCtpList.dim");
	else if (ix == PREPLNRCTPLIST_DSN) return("PrePlnrCtpList.dsn");
	else if (ix == PREPLNRCTPLIST_PRJ) return("PrePlnrCtpList.prj");
	else if (ix == PREPLNRCTPLIST_SUP) return("PrePlnrCtpList.sup");
	else if (ix == PREPLNRCTPLIST_TIT) return("PrePlnrCtpList.tit");
	else if (ix == PREPLNRCTPLIST_TPL) return("PrePlnrCtpList.tpl");
	else if (ix == PREPLNRCTPMNFILE_X1) return("PrePlnrCtpMNFile.x1");
	else if (ix == PREPLNRDGDLIST_DSN) return("PrePlnrDgdList.dsn");
	else if (ix == PREPLNRDGDLIST_SRF) return("PrePlnrDgdList.srf");
	else if (ix == PREPLNRDGDLIST_TYP) return("PrePlnrDgdList.typ");
	else if (ix == PREPLNRDOMLIST_DSN) return("PrePlnrDomList.dsn");
	else if (ix == PREPLNRDOMLIST_SRF) return("PrePlnrDomList.srf");
	else if (ix == PREPLNRDOMLIST_TYP) return("PrePlnrDomList.typ");
	else if (ix == PREPLNRDSNHK1NARCGUIDE_X1) return("PrePlnrDsnHk1NArcguide.x1");
	else if (ix == PREPLNRDSNHK1NLAYER_X1) return("PrePlnrDsnHk1NLayer.x1");
	else if (ix == PREPLNRDSNHK1NLEVEL_X1) return("PrePlnrDsnHk1NLevel.x1");
	else if (ix == PREPLNRDSNHK1NLINEGUIDE_X1) return("PrePlnrDsnHk1NLineguide.x1");
	else if (ix == PREPLNRDSNHK1NVERTEX_X1) return("PrePlnrDsnHk1NVertex.x1");
	else if (ix == PREPLNRDSNLIST_DIM) return("PrePlnrDsnList.dim");
	else if (ix == PREPLNRDSNLIST_DRV) return("PrePlnrDsnList.drv");
	else if (ix == PREPLNRDSNLIST_MOD) return("PrePlnrDsnList.mod");
	else if (ix == PREPLNRDSNLIST_MTY) return("PrePlnrDsnList.mty");
	else if (ix == PREPLNRDSNLIST_PRJ) return("PrePlnrDsnList.prj");
	else if (ix == PREPLNRDSNLIST_RET) return("PrePlnrDsnList.ret");
	else if (ix == PREPLNRDSNLIST_REU) return("PrePlnrDsnList.reu");
	else if (ix == PREPLNRDSNLIST_TYP) return("PrePlnrDsnList.typ");
	else if (ix == PREPLNRDTPAPAR_X1) return("PrePlnrDtpAPar.x1");
	else if (ix == PREPLNRDTPAPAR_X2) return("PrePlnrDtpAPar.x2");
	else if (ix == PREPLNRDTPHK1NARCGUIDE_OPR_X1) return("PrePlnrDtpHk1NArcguide.opr.x1");
	else if (ix == PREPLNRDTPHK1NARCGUIDE_X1) return("PrePlnrDtpHk1NArcguide.x1");
	else if (ix == PREPLNRDTPHK1NLINEGUIDE_OPR_X1) return("PrePlnrDtpHk1NLineguide.opr.x1");
	else if (ix == PREPLNRDTPHK1NLINEGUIDE_X1) return("PrePlnrDtpHk1NLineguide.x1");
	else if (ix == PREPLNRDTPHK1NVERTEX_OPR_X1) return("PrePlnrDtpHk1NVertex.opr.x1");
	else if (ix == PREPLNRDTPHK1NVERTEX_X1) return("PrePlnrDtpHk1NVertex.x1");
	else if (ix == PREPLNRDTPLIST_DSN) return("PrePlnrDtpList.dsn");
	else if (ix == PREPLNRDTPLIST_SRF) return("PrePlnrDtpList.srf");
	else if (ix == PREPLNRDTPLIST_SUP) return("PrePlnrDtpList.sup");
	else if (ix == PREPLNRDTPLIST_TPL) return("PrePlnrDtpList.tpl");
	else if (ix == PREPLNRDVCAPAR_X1) return("PrePlnrDvcAPar.x1");
	else if (ix == PREPLNRDVCAPAR_X2) return("PrePlnrDvcAPar.x2");
	else if (ix == PREPLNRDVCHK1NARCGUIDE_OPR_X1) return("PrePlnrDvcHk1NArcguide.opr.x1");
	else if (ix == PREPLNRDVCHK1NARCGUIDE_X1) return("PrePlnrDvcHk1NArcguide.x1");
	else if (ix == PREPLNRDVCHK1NLINEGUIDE_OPR_X1) return("PrePlnrDvcHk1NLineguide.opr.x1");
	else if (ix == PREPLNRDVCHK1NLINEGUIDE_X1) return("PrePlnrDvcHk1NLineguide.x1");
	else if (ix == PREPLNRDVCHK1NVERTEX_OPR_X1) return("PrePlnrDvcHk1NVertex.opr.x1");
	else if (ix == PREPLNRDVCHK1NVERTEX_X1) return("PrePlnrDvcHk1NVertex.x1");
	else if (ix == PREPLNRDVCLIST_DSN) return("PrePlnrDvcList.dsn");
	else if (ix == PREPLNRDVCLIST_SRF) return("PrePlnrDvcList.srf");
	else if (ix == PREPLNRDVCLIST_SUP) return("PrePlnrDvcList.sup");
	else if (ix == PREPLNRDVCLIST_TPL) return("PrePlnrDvcList.tpl");
	else if (ix == PREPLNRFILLIST_FNM) return("PrePlnrFilList.fnm");
	else if (ix == PREPLNRFILLIST_RET) return("PrePlnrFilList.ret");
	else if (ix == PREPLNRFILLIST_REU) return("PrePlnrFilList.reu");
	else if (ix == PREPLNRFILMNCALC_X1) return("PrePlnrFilMNCalc.x1");
	else if (ix == PREPLNRGRP) return("PrePlnrGrp");
	else if (ix == PREPLNRIP) return("PrePlnrIp");
	else if (ix == PREPLNRIXACC) return("PrePlnrIxAcc");
	else if (ix == PREPLNRIXLCL) return("PrePlnrIxLcl");
	else if (ix == PREPLNRIXORD) return("PrePlnrIxOrd");
	else if (ix == PREPLNRIXPRE) return("PrePlnrIxPre");
	else if (ix == PREPLNRIXUACARI) return("PrePlnrIxUacAri");
	else if (ix == PREPLNRIXUACARR) return("PrePlnrIxUacArr");
	else if (ix == PREPLNRIXUACCLC) return("PrePlnrIxUacClc");
	else if (ix == PREPLNRIXUACCLI) return("PrePlnrIxUacCli");
	else if (ix == PREPLNRIXUACCTP) return("PrePlnrIxUacCtp");
	else if (ix == PREPLNRIXUACDGD) return("PrePlnrIxUacDgd");
	else if (ix == PREPLNRIXUACDOM) return("PrePlnrIxUacDom");
	else if (ix == PREPLNRIXUACDSN) return("PrePlnrIxUacDsn");
	else if (ix == PREPLNRIXUACDTP) return("PrePlnrIxUacDtp");
	else if (ix == PREPLNRIXUACDVC) return("PrePlnrIxUacDvc");
	else if (ix == PREPLNRIXUACFIL) return("PrePlnrIxUacFil");
	else if (ix == PREPLNRIXUACLYR) return("PrePlnrIxUacLyr");
	else if (ix == PREPLNRIXUACMAT) return("PrePlnrIxUacMat");
	else if (ix == PREPLNRIXUACPRJ) return("PrePlnrIxUacPrj");
	else if (ix == PREPLNRIXUACPRS) return("PrePlnrIxUacPrs");
	else if (ix == PREPLNRIXUACRTC) return("PrePlnrIxUacRtc");
	else if (ix == PREPLNRIXUACSRU) return("PrePlnrIxUacSru");
	else if (ix == PREPLNRIXUACSTK) return("PrePlnrIxUacStk");
	else if (ix == PREPLNRIXUACTPO) return("PrePlnrIxUacTpo");
	else if (ix == PREPLNRIXUACUSG) return("PrePlnrIxUacUsg");
	else if (ix == PREPLNRIXUACUSR) return("PrePlnrIxUacUsr");
	else if (ix == PREPLNRJREFNOTIFY) return("PrePlnrJrefNotify");
	else if (ix == PREPLNRJREFSESS) return("PrePlnrJrefSess");
	else if (ix == PREPLNRLYRLIST_HKT) return("PrePlnrLyrList.hkt");
	else if (ix == PREPLNRLYRLIST_HKU) return("PrePlnrLyrList.hku");
	else if (ix == PREPLNRLYRLIST_MAT) return("PrePlnrLyrList.mat");
	else if (ix == PREPLNRLYRLIST_SRF) return("PrePlnrLyrList.srf");
	else if (ix == PREPLNRLYRLIST_TTY) return("PrePlnrLyrList.tty");
	else if (ix == PREPLNRLYRLIST_TYP) return("PrePlnrLyrList.typ");
	else if (ix == PREPLNRMAT1NLAYER_X1) return("PrePlnrMat1NLayer.x1");
	else if (ix == PREPLNRMATAPAR_X1) return("PrePlnrMatAPar.x1");
	else if (ix == PREPLNRMATAPAR_X2) return("PrePlnrMatAPar.x2");
	else if (ix == PREPLNRMATAPAR_X3) return("PrePlnrMatAPar.x3");
	else if (ix == PREPLNRMATLIST_CAL) return("PrePlnrMatList.cal");
	else if (ix == PREPLNRMATLIST_SRF) return("PrePlnrMatList.srf");
	else if (ix == PREPLNRMATLIST_SUP) return("PrePlnrMatList.sup");
	else if (ix == PREPLNRMATLIST_TIT) return("PrePlnrMatList.tit");
	else if (ix == PREPLNRMATLIST_TYP) return("PrePlnrMatList.typ");
	else if (ix == PREPLNROWN) return("PrePlnrOwn");
	else if (ix == PREPLNRPRJLIST_TIT) return("PrePlnrPrjList.tit");
	else if (ix == PREPLNRPRSADETAIL_X1) return("PrePlnrPrsADetail.x1");
	else if (ix == PREPLNRPRSLIST_GRP) return("PrePlnrPrsList.grp");
	else if (ix == PREPLNRPRSLIST_LNM) return("PrePlnrPrsList.lnm");
	else if (ix == PREPLNRPRSLIST_OWN) return("PrePlnrPrsList.own");
	else if (ix == PREPLNRREFAGD) return("PrePlnrRefAgd");
	else if (ix == PREPLNRREFARI) return("PrePlnrRefAri");
	else if (ix == PREPLNRREFARR) return("PrePlnrRefArr");
	else if (ix == PREPLNRREFBLK) return("PrePlnrRefBlk");
	else if (ix == PREPLNRREFCAL) return("PrePlnrRefCal");
	else if (ix == PREPLNRREFCLC) return("PrePlnrRefClc");
	else if (ix == PREPLNRREFCLI) return("PrePlnrRefCli");
	else if (ix == PREPLNRREFCTP) return("PrePlnrRefCtp");
	else if (ix == PREPLNRREFDEV) return("PrePlnrRefDev");
	else if (ix == PREPLNRREFDGD) return("PrePlnrRefDgd");
	else if (ix == PREPLNRREFDOM) return("PrePlnrRefDom");
	else if (ix == PREPLNRREFDSN) return("PrePlnrRefDsn");
	else if (ix == PREPLNRREFDTP) return("PrePlnrRefDtp");
	else if (ix == PREPLNRREFDVC) return("PrePlnrRefDvc");
	else if (ix == PREPLNRREFFCE) return("PrePlnrRefFce");
	else if (ix == PREPLNRREFFIL) return("PrePlnrRefFil");
	else if (ix == PREPLNRREFLGD) return("PrePlnrRefLgd");
	else if (ix == PREPLNRREFLVL) return("PrePlnrRefLvl");
	else if (ix == PREPLNRREFLYR) return("PrePlnrRefLyr");
	else if (ix == PREPLNRREFMAT) return("PrePlnrRefMat");
	else if (ix == PREPLNRREFMODDSN) return("PrePlnrRefModdsn");
	else if (ix == PREPLNRREFPRJ) return("PrePlnrRefPrj");
	else if (ix == PREPLNRREFPRS) return("PrePlnrRefPrs");
	else if (ix == PREPLNRREFRTC) return("PrePlnrRefRtc");
	else if (ix == PREPLNRREFSEL) return("PrePlnrRefSel");
	else if (ix == PREPLNRREFSES) return("PrePlnrRefSes");
	else if (ix == PREPLNRREFSRU) return("PrePlnrRefSru");
	else if (ix == PREPLNRREFSSUBDEV) return("PrePlnrRefsSubdev");
	else if (ix == PREPLNRREFSTK) return("PrePlnrRefStk");
	else if (ix == PREPLNRREFTPO) return("PrePlnrRefTpo");
	else if (ix == PREPLNRREFUSG) return("PrePlnrRefUsg");
	else if (ix == PREPLNRREFUSR) return("PrePlnrRefUsr");
	else if (ix == PREPLNRREFVTX) return("PrePlnrRefVtx");
	else if (ix == PREPLNRRTCLIST_DSN) return("PrePlnrRtcList.dsn");
	else if (ix == PREPLNRRTCLIST_HKT) return("PrePlnrRtcList.hkt");
	else if (ix == PREPLNRRTCLIST_HKU) return("PrePlnrRtcList.hku");
	else if (ix == PREPLNRRTCLIST_LYR) return("PrePlnrRtcList.lyr");
	else if (ix == PREPLNRRTCLIST_SRF) return("PrePlnrRtcList.srf");
	else if (ix == PREPLNRSESS) return("PrePlnrSess");
	else if (ix == PREPLNRSRULIST_HKT) return("PrePlnrSruList.hkt");
	else if (ix == PREPLNRSRULIST_HKU) return("PrePlnrSruList.hku");
	else if (ix == PREPLNRSRULIST_SRF) return("PrePlnrSruList.srf");
	else if (ix == PREPLNRSRUSRU1NFACE_OPR_X1) return("PrePlnrSruSru1NFace.opr.x1");
	else if (ix == PREPLNRSRUSRU1NFACE_X1) return("PrePlnrSruSru1NFace.x1");
	else if (ix == PREPLNRSTKHK1NLAYER_X1) return("PrePlnrStkHk1NLayer.x1");
	else if (ix == PREPLNRSTKHK1NLEVEL_X1) return("PrePlnrStkHk1NLevel.x1");
	else if (ix == PREPLNRSTKLIST_DSN) return("PrePlnrStkList.dsn");
	else if (ix == PREPLNRSTKLIST_SRF) return("PrePlnrStkList.srf");
	else if (ix == PREPLNRSTKLIST_TYP) return("PrePlnrStkList.typ");
	else if (ix == PREPLNRSYSDATE) return("PrePlnrSysdate");
	else if (ix == PREPLNRSYSSTAMP) return("PrePlnrSysstamp");
	else if (ix == PREPLNRSYSTIME) return("PrePlnrSystime");
	else if (ix == PREPLNRTPOLIST_TIT) return("PrePlnrTpoList.tit");
	else if (ix == PREPLNRTPOLIST_TYP) return("PrePlnrTpoList.typ");
	else if (ix == PREPLNRUSGAACCESS_X1) return("PrePlnrUsgAAccess.x1");
	else if (ix == PREPLNRUSGLIST_SRF) return("PrePlnrUsgList.srf");
	else if (ix == PREPLNRUSRAACCESS_X1) return("PrePlnrUsrAAccess.x1");
	else if (ix == PREPLNRUSRLIST_PRS) return("PrePlnrUsrList.prs");
	else if (ix == PREPLNRUSRLIST_SRF) return("PrePlnrUsrList.srf");
	else if (ix == PREPLNRUSRLIST_USG) return("PrePlnrUsrList.usg");

	return("");
};

string VecPlnrVPreset::getTitle(
			const uint ix
			, const uint ixPlnrVLocale
		) {
	if (ixPlnrVLocale == 1) {
		if (ix == VOID) return("none");
		else if (ix == PREPLNRREFAGD) return("arc guide");
		else if (ix == PREPLNRREFARI) return("array item");
		else if (ix == PREPLNRREFARR) return("array");
		else if (ix == PREPLNRREFBLK) return("block");
		else if (ix == PREPLNRREFCAL) return("calculation");
		else if (ix == PREPLNRREFCLC) return("calculation");
		else if (ix == PREPLNRREFCLI) return("calculation item");
		else if (ix == PREPLNRREFCTP) return("calculation template");
		else if (ix == PREPLNRREFDEV) return("device");
		else if (ix == PREPLNRREFDGD) return("domain guide");
		else if (ix == PREPLNRREFDOM) return("domain");
		else if (ix == PREPLNRREFDSN) return("design");
		else if (ix == PREPLNRREFDTP) return("device template");
		else if (ix == PREPLNRREFDVC) return("device");
		else if (ix == PREPLNRREFFCE) return("face");
		else if (ix == PREPLNRREFFIL) return("file");
		else if (ix == PREPLNRREFLGD) return("line guide");
		else if (ix == PREPLNRREFLVL) return("level");
		else if (ix == PREPLNRREFLYR) return("layer");
		else if (ix == PREPLNRREFMAT) return("material");
		else if (ix == PREPLNRREFMODDSN) return("design modification");
		else if (ix == PREPLNRREFPRJ) return("project");
		else if (ix == PREPLNRREFPRS) return("person");
		else if (ix == PREPLNRREFRTC) return("reticle");
		else if (ix == PREPLNRREFSES) return("session");
		else if (ix == PREPLNRREFSRU) return("structure");
		else if (ix == PREPLNRREFSSUBDEV) return("sub-devices");
		else if (ix == PREPLNRREFSTK) return("stack");
		else if (ix == PREPLNRREFTPO) return("tape-out");
		else if (ix == PREPLNRREFUSG) return("user group");
		else if (ix == PREPLNRREFUSR) return("user");
		else if (ix == PREPLNRREFVTX) return("vertex");
		else return(getSref(ix));
	};

	return("");
};

