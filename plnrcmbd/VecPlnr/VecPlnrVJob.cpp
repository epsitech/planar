/**
  * \file VecPlnrVJob.cpp
  * vector VecPlnrVJob (implementation)
  * \author Alexander Wirthmueller
  * \date created: 4 Dec 2015
  * \date modified: 4 Dec 2015
  */

#include "VecPlnrVJob.h"

/******************************************************************************
 namespace VecPlnrVJob
 ******************************************************************************/

uint VecPlnrVJob::getIx(
			const string& sref
		) {
	string s = StrMod::lc(sref);

	if (s == "crdplnrari") return CRDPLNRARI;
	else if (s == "crdplnrarr") return CRDPLNRARR;
	else if (s == "crdplnrclc") return CRDPLNRCLC;
	else if (s == "crdplnrcli") return CRDPLNRCLI;
	else if (s == "crdplnrctp") return CRDPLNRCTP;
	else if (s == "crdplnrdgd") return CRDPLNRDGD;
	else if (s == "crdplnrdom") return CRDPLNRDOM;
	else if (s == "crdplnrdsn") return CRDPLNRDSN;
	else if (s == "crdplnrdtp") return CRDPLNRDTP;
	else if (s == "crdplnrdvc") return CRDPLNRDVC;
	else if (s == "crdplnrfil") return CRDPLNRFIL;
	else if (s == "crdplnrlyr") return CRDPLNRLYR;
	else if (s == "crdplnrmat") return CRDPLNRMAT;
	else if (s == "crdplnrnav") return CRDPLNRNAV;
	else if (s == "crdplnrprj") return CRDPLNRPRJ;
	else if (s == "crdplnrprs") return CRDPLNRPRS;
	else if (s == "crdplnrrtc") return CRDPLNRRTC;
	else if (s == "crdplnrsru") return CRDPLNRSRU;
	else if (s == "crdplnrstk") return CRDPLNRSTK;
	else if (s == "crdplnrtpo") return CRDPLNRTPO;
	else if (s == "crdplnrusg") return CRDPLNRUSG;
	else if (s == "crdplnrusr") return CRDPLNRUSR;
	else if (s == "dlgplnrclcexprtx") return DLGPLNRCLCEXPRTX;
	else if (s == "dlgplnrclcgenrpv") return DLGPLNRCLCGENRPV;
	else if (s == "dlgplnrclcusecase") return DLGPLNRCLCUSECASE;
	else if (s == "dlgplnrdsngenplt") return DLGPLNRDSNGENPLT;
	else if (s == "dlgplnrfildldcpy") return DLGPLNRFILDLDCPY;
	else if (s == "dlgplnrnavloaini") return DLGPLNRNAVLOAINI;
	else if (s == "dlgplnrtpousecase") return DLGPLNRTPOUSECASE;
	else if (s == "iexplnrini") return IEXPLNRINI;
	else if (s == "jobplnrclcdisptest") return JOBPLNRCLCDISPTEST;
	else if (s == "jobplnrclcqcdslab") return JOBPLNRCLCQCDSLAB;
	else if (s == "jobplnrtpoexamples") return JOBPLNRTPOEXAMPLES;
	else if (s == "jobplnrtpoicabatch1") return JOBPLNRTPOICABATCH1;
	else if (s == "jobplnrtpoicabatch2") return JOBPLNRTPOICABATCH2;
	else if (s == "jobplnrtpoicabatch3") return JOBPLNRTPOICABATCH3;
	else if (s == "jobplnrtpouvslides") return JOBPLNRTPOUVSLIDES;
	else if (s == "pnlplnrariamarrayenv") return PNLPLNRARIAMARRAYENV;
	else if (s == "pnlplnraridetail") return PNLPLNRARIDETAIL;
	else if (s == "pnlplnrariheadbar") return PNLPLNRARIHEADBAR;
	else if (s == "pnlplnrarilist") return PNLPLNRARILIST;
	else if (s == "pnlplnrarirec") return PNLPLNRARIREC;
	else if (s == "pnlplnrarr1narrayitem") return PNLPLNRARR1NARRAYITEM;
	else if (s == "pnlplnrarraenv") return PNLPLNRARRAENV;
	else if (s == "pnlplnrarrdetail") return PNLPLNRARRDETAIL;
	else if (s == "pnlplnrarrheadbar") return PNLPLNRARRHEADBAR;
	else if (s == "pnlplnrarrhk1nreticle") return PNLPLNRARRHK1NRETICLE;
	else if (s == "pnlplnrarrkenvkey") return PNLPLNRARRKENVKEY;
	else if (s == "pnlplnrarrlist") return PNLPLNRARRLIST;
	else if (s == "pnlplnrarrrec") return PNLPLNRARRREC;
	else if (s == "pnlplnrclc1nmaterial") return PNLPLNRCLC1NMATERIAL;
	else if (s == "pnlplnrclcaenv") return PNLPLNRCLCAENV;
	else if (s == "pnlplnrclcapar") return PNLPLNRCLCAPAR;
	else if (s == "pnlplnrclccal1ncalcitem") return PNLPLNRCLCCAL1NCALCITEM;
	else if (s == "pnlplnrclcdetail") return PNLPLNRCLCDETAIL;
	else if (s == "pnlplnrclcheadbar") return PNLPLNRCLCHEADBAR;
	else if (s == "pnlplnrclclist") return PNLPLNRCLCLIST;
	else if (s == "pnlplnrclcmndomain") return PNLPLNRCLCMNDOMAIN;
	else if (s == "pnlplnrclcmnfile") return PNLPLNRCLCMNFILE;
	else if (s == "pnlplnrclcpre") return PNLPLNRCLCPRE;
	else if (s == "pnlplnrclcrec") return PNLPLNRCLCREC;
	else if (s == "pnlplnrclcref1nfile") return PNLPLNRCLCREF1NFILE;
	else if (s == "pnlplnrclcsup1ncalc") return PNLPLNRCLCSUP1NCALC;
	else if (s == "pnlplnrclcview") return PNLPLNRCLCVIEW;
	else if (s == "pnlplnrcliaamcalcenv") return PNLPLNRCLIAAMCALCENV;
	else if (s == "pnlplnrcliaamcalcpar") return PNLPLNRCLIAAMCALCPAR;
	else if (s == "pnlplnrclidetail") return PNLPLNRCLIDETAIL;
	else if (s == "pnlplnrcliheadbar") return PNLPLNRCLIHEADBAR;
	else if (s == "pnlplnrclilist") return PNLPLNRCLILIST;
	else if (s == "pnlplnrclirec") return PNLPLNRCLIREC;
	else if (s == "pnlplnrcliref1nfile") return PNLPLNRCLIREF1NFILE;
	else if (s == "pnlplnrctpaenv") return PNLPLNRCTPAENV;
	else if (s == "pnlplnrctpapar") return PNLPLNRCTPAPAR;
	else if (s == "pnlplnrctpdetail") return PNLPLNRCTPDETAIL;
	else if (s == "pnlplnrctpheadbar") return PNLPLNRCTPHEADBAR;
	else if (s == "pnlplnrctpkcalcdomprp") return PNLPLNRCTPKCALCDOMPRP;
	else if (s == "pnlplnrctpkcalcvar") return PNLPLNRCTPKCALCVAR;
	else if (s == "pnlplnrctpkenvkey") return PNLPLNRCTPKENVKEY;
	else if (s == "pnlplnrctpkparcat") return PNLPLNRCTPKPARCAT;
	else if (s == "pnlplnrctpkparprop") return PNLPLNRCTPKPARPROP;
	else if (s == "pnlplnrctplist") return PNLPLNRCTPLIST;
	else if (s == "pnlplnrctprec") return PNLPLNRCTPREC;
	else if (s == "pnlplnrctpref1nfile") return PNLPLNRCTPREF1NFILE;
	else if (s == "pnlplnrctpsup1ncalc") return PNLPLNRCTPSUP1NCALC;
	else if (s == "pnlplnrctptpl1ncalc") return PNLPLNRCTPTPL1NCALC;
	else if (s == "pnlplnrdgddetail") return PNLPLNRDGDDETAIL;
	else if (s == "pnlplnrdgdheadbar") return PNLPLNRDGDHEADBAR;
	else if (s == "pnlplnrdgdlist") return PNLPLNRDGDLIST;
	else if (s == "pnlplnrdgdrec") return PNLPLNRDGDREC;
	else if (s == "pnlplnrdomdetail") return PNLPLNRDOMDETAIL;
	else if (s == "pnlplnrdomheadbar") return PNLPLNRDOMHEADBAR;
	else if (s == "pnlplnrdomlist") return PNLPLNRDOMLIST;
	else if (s == "pnlplnrdommncalc") return PNLPLNRDOMMNCALC;
	else if (s == "pnlplnrdomrec") return PNLPLNRDOMREC;
	else if (s == "pnlplnrdsn1nblock") return PNLPLNRDSN1NBLOCK;
	else if (s == "pnlplnrdsn1nreticle") return PNLPLNRDSN1NRETICLE;
	else if (s == "pnlplnrdsndetail") return PNLPLNRDSNDETAIL;
	else if (s == "pnlplnrdsndrv1ndesign") return PNLPLNRDSNDRV1NDESIGN;
	else if (s == "pnlplnrdsndsn1ndevice") return PNLPLNRDSNDSN1NDEVICE;
	else if (s == "pnlplnrdsndsn1ndomain") return PNLPLNRDSNDSN1NDOMAIN;
	else if (s == "pnlplnrdsndsn1ndomaingd") return PNLPLNRDSNDSN1NDOMAINGD;
	else if (s == "pnlplnrdsndsn1nstack") return PNLPLNRDSNDSN1NSTACK;
	else if (s == "pnlplnrdsnheadbar") return PNLPLNRDSNHEADBAR;
	else if (s == "pnlplnrdsnhk1narcguide") return PNLPLNRDSNHK1NARCGUIDE;
	else if (s == "pnlplnrdsnhk1nlayer") return PNLPLNRDSNHK1NLAYER;
	else if (s == "pnlplnrdsnhk1nlevel") return PNLPLNRDSNHK1NLEVEL;
	else if (s == "pnlplnrdsnhk1nlineguide") return PNLPLNRDSNHK1NLINEGUIDE;
	else if (s == "pnlplnrdsnhk1nstructure") return PNLPLNRDSNHK1NSTRUCTURE;
	else if (s == "pnlplnrdsnhk1nvertex") return PNLPLNRDSNHK1NVERTEX;
	else if (s == "pnlplnrdsnlist") return PNLPLNRDSNLIST;
	else if (s == "pnlplnrdsnmod1ndesign") return PNLPLNRDSNMOD1NDESIGN;
	else if (s == "pnlplnrdsnpre") return PNLPLNRDSNPRE;
	else if (s == "pnlplnrdsnrec") return PNLPLNRDSNREC;
	else if (s == "pnlplnrdsnviewxy") return PNLPLNRDSNVIEWXY;
	else if (s == "pnlplnrdsnviewz") return PNLPLNRDSNVIEWZ;
	else if (s == "pnlplnrdtpapar") return PNLPLNRDTPAPAR;
	else if (s == "pnlplnrdtpdetail") return PNLPLNRDTPDETAIL;
	else if (s == "pnlplnrdtpheadbar") return PNLPLNRDTPHEADBAR;
	else if (s == "pnlplnrdtphk1nstructure") return PNLPLNRDTPHK1NSTRUCTURE;
	else if (s == "pnlplnrdtpkparkey") return PNLPLNRDTPKPARKEY;
	else if (s == "pnlplnrdtplist") return PNLPLNRDTPLIST;
	else if (s == "pnlplnrdtppre") return PNLPLNRDTPPRE;
	else if (s == "pnlplnrdtprec") return PNLPLNRDTPREC;
	else if (s == "pnlplnrdtpsup1ndevice") return PNLPLNRDTPSUP1NDEVICE;
	else if (s == "pnlplnrdtptpl1ndevice") return PNLPLNRDTPTPL1NDEVICE;
	else if (s == "pnlplnrdtpview") return PNLPLNRDTPVIEW;
	else if (s == "pnlplnrdvcapar") return PNLPLNRDVCAPAR;
	else if (s == "pnlplnrdvcdetail") return PNLPLNRDVCDETAIL;
	else if (s == "pnlplnrdvcheadbar") return PNLPLNRDVCHEADBAR;
	else if (s == "pnlplnrdvchk1narcguide") return PNLPLNRDVCHK1NARCGUIDE;
	else if (s == "pnlplnrdvchk1nlineguide") return PNLPLNRDVCHK1NLINEGUIDE;
	else if (s == "pnlplnrdvchk1nstructure") return PNLPLNRDVCHK1NSTRUCTURE;
	else if (s == "pnlplnrdvchk1nvertex") return PNLPLNRDVCHK1NVERTEX;
	else if (s == "pnlplnrdvclist") return PNLPLNRDVCLIST;
	else if (s == "pnlplnrdvcpre") return PNLPLNRDVCPRE;
	else if (s == "pnlplnrdvcrec") return PNLPLNRDVCREC;
	else if (s == "pnlplnrdvcsup1ndevice") return PNLPLNRDVCSUP1NDEVICE;
	else if (s == "pnlplnrdvcview") return PNLPLNRDVCVIEW;
	else if (s == "pnlplnrfildetail") return PNLPLNRFILDETAIL;
	else if (s == "pnlplnrfilheadbar") return PNLPLNRFILHEADBAR;
	else if (s == "pnlplnrfillist") return PNLPLNRFILLIST;
	else if (s == "pnlplnrfilmncalc") return PNLPLNRFILMNCALC;
	else if (s == "pnlplnrfilrec") return PNLPLNRFILREC;
	else if (s == "pnlplnrlyr1nblock") return PNLPLNRLYR1NBLOCK;
	else if (s == "pnlplnrlyr1nreticle") return PNLPLNRLYR1NRETICLE;
	else if (s == "pnlplnrlyrdetail") return PNLPLNRLYRDETAIL;
	else if (s == "pnlplnrlyrheadbar") return PNLPLNRLYRHEADBAR;
	else if (s == "pnlplnrlyrlist") return PNLPLNRLYRLIST;
	else if (s == "pnlplnrlyrmnstructure") return PNLPLNRLYRMNSTRUCTURE;
	else if (s == "pnlplnrlyrrec") return PNLPLNRLYRREC;
	else if (s == "pnlplnrmat1nlayer") return PNLPLNRMAT1NLAYER;
	else if (s == "pnlplnrmatapar") return PNLPLNRMATAPAR;
	else if (s == "pnlplnrmatdetail") return PNLPLNRMATDETAIL;
	else if (s == "pnlplnrmatheadbar") return PNLPLNRMATHEADBAR;
	else if (s == "pnlplnrmatlist") return PNLPLNRMATLIST;
	else if (s == "pnlplnrmatmod1nmaterial") return PNLPLNRMATMOD1NMATERIAL;
	else if (s == "pnlplnrmatrec") return PNLPLNRMATREC;
	else if (s == "pnlplnrmatref1nfile") return PNLPLNRMATREF1NFILE;
	else if (s == "pnlplnrnavadmin") return PNLPLNRNAVADMIN;
	else if (s == "pnlplnrnavcalc") return PNLPLNRNAVCALC;
	else if (s == "pnlplnrnavdesign") return PNLPLNRNAVDESIGN;
	else if (s == "pnlplnrnavglobal") return PNLPLNRNAVGLOBAL;
	else if (s == "pnlplnrnavheadbar") return PNLPLNRNAVHEADBAR;
	else if (s == "pnlplnrnavlayout") return PNLPLNRNAVLAYOUT;
	else if (s == "pnlplnrnavpre") return PNLPLNRNAVPRE;
	else if (s == "pnlplnrprj1ncalc") return PNLPLNRPRJ1NCALC;
	else if (s == "pnlplnrprj1ndesign") return PNLPLNRPRJ1NDESIGN;
	else if (s == "pnlplnrprjdetail") return PNLPLNRPRJDETAIL;
	else if (s == "pnlplnrprjheadbar") return PNLPLNRPRJHEADBAR;
	else if (s == "pnlplnrprjlist") return PNLPLNRPRJLIST;
	else if (s == "pnlplnrprjmntapeout") return PNLPLNRPRJMNTAPEOUT;
	else if (s == "pnlplnrprjrec") return PNLPLNRPRJREC;
	else if (s == "pnlplnrprsadetail") return PNLPLNRPRSADETAIL;
	else if (s == "pnlplnrprsdetail") return PNLPLNRPRSDETAIL;
	else if (s == "pnlplnrprsheadbar") return PNLPLNRPRSHEADBAR;
	else if (s == "pnlplnrprslist") return PNLPLNRPRSLIST;
	else if (s == "pnlplnrprsrec") return PNLPLNRPRSREC;
	else if (s == "pnlplnrrtcdetail") return PNLPLNRRTCDETAIL;
	else if (s == "pnlplnrrtcheadbar") return PNLPLNRRTCHEADBAR;
	else if (s == "pnlplnrrtclist") return PNLPLNRRTCLIST;
	else if (s == "pnlplnrrtcrec") return PNLPLNRRTCREC;
	else if (s == "pnlplnrsru1nblock") return PNLPLNRSRU1NBLOCK;
	else if (s == "pnlplnrsrudetail") return PNLPLNRSRUDETAIL;
	else if (s == "pnlplnrsruheadbar") return PNLPLNRSRUHEADBAR;
	else if (s == "pnlplnrsrulist") return PNLPLNRSRULIST;
	else if (s == "pnlplnrsrumnlayer") return PNLPLNRSRUMNLAYER;
	else if (s == "pnlplnrsrumnstack") return PNLPLNRSRUMNSTACK;
	else if (s == "pnlplnrsrurec") return PNLPLNRSRUREC;
	else if (s == "pnlplnrsrusru1nface") return PNLPLNRSRUSRU1NFACE;
	else if (s == "pnlplnrstkdetail") return PNLPLNRSTKDETAIL;
	else if (s == "pnlplnrstkheadbar") return PNLPLNRSTKHEADBAR;
	else if (s == "pnlplnrstkhk1nlayer") return PNLPLNRSTKHK1NLAYER;
	else if (s == "pnlplnrstkhk1nlevel") return PNLPLNRSTKHK1NLEVEL;
	else if (s == "pnlplnrstklist") return PNLPLNRSTKLIST;
	else if (s == "pnlplnrstkmnstructure") return PNLPLNRSTKMNSTRUCTURE;
	else if (s == "pnlplnrstkpre") return PNLPLNRSTKPRE;
	else if (s == "pnlplnrstkrec") return PNLPLNRSTKREC;
	else if (s == "pnlplnrstkview") return PNLPLNRSTKVIEW;
	else if (s == "pnlplnrtpo1narray") return PNLPLNRTPO1NARRAY;
	else if (s == "pnlplnrtpodetail") return PNLPLNRTPODETAIL;
	else if (s == "pnlplnrtpofloorplan") return PNLPLNRTPOFLOORPLAN;
	else if (s == "pnlplnrtpoheadbar") return PNLPLNRTPOHEADBAR;
	else if (s == "pnlplnrtpohk1nreticle") return PNLPLNRTPOHK1NRETICLE;
	else if (s == "pnlplnrtpolist") return PNLPLNRTPOLIST;
	else if (s == "pnlplnrtpomnproject") return PNLPLNRTPOMNPROJECT;
	else if (s == "pnlplnrtporec") return PNLPLNRTPOREC;
	else if (s == "pnlplnrusgaaccess") return PNLPLNRUSGAACCESS;
	else if (s == "pnlplnrusgdetail") return PNLPLNRUSGDETAIL;
	else if (s == "pnlplnrusgheadbar") return PNLPLNRUSGHEADBAR;
	else if (s == "pnlplnrusglist") return PNLPLNRUSGLIST;
	else if (s == "pnlplnrusgmnuser") return PNLPLNRUSGMNUSER;
	else if (s == "pnlplnrusgrec") return PNLPLNRUSGREC;
	else if (s == "pnlplnrusr1nsession") return PNLPLNRUSR1NSESSION;
	else if (s == "pnlplnrusraaccess") return PNLPLNRUSRAACCESS;
	else if (s == "pnlplnrusrdetail") return PNLPLNRUSRDETAIL;
	else if (s == "pnlplnrusrheadbar") return PNLPLNRUSRHEADBAR;
	else if (s == "pnlplnrusrlist") return PNLPLNRUSRLIST;
	else if (s == "pnlplnrusrmnusergroup") return PNLPLNRUSRMNUSERGROUP;
	else if (s == "pnlplnrusrrec") return PNLPLNRUSRREC;
	else if (s == "qryplnrariamarrayenv") return QRYPLNRARIAMARRAYENV;
	else if (s == "qryplnrarilist") return QRYPLNRARILIST;
	else if (s == "qryplnrarr1narrayitem") return QRYPLNRARR1NARRAYITEM;
	else if (s == "qryplnrarraenv") return QRYPLNRARRAENV;
	else if (s == "qryplnrarrhk1nreticle") return QRYPLNRARRHK1NRETICLE;
	else if (s == "qryplnrarrkenvkey") return QRYPLNRARRKENVKEY;
	else if (s == "qryplnrarrlist") return QRYPLNRARRLIST;
	else if (s == "qryplnrclc1nmaterial") return QRYPLNRCLC1NMATERIAL;
	else if (s == "qryplnrclcaenv") return QRYPLNRCLCAENV;
	else if (s == "qryplnrclcapar") return QRYPLNRCLCAPAR;
	else if (s == "qryplnrclccal1ncalcitem") return QRYPLNRCLCCAL1NCALCITEM;
	else if (s == "qryplnrclclist") return QRYPLNRCLCLIST;
	else if (s == "qryplnrclcmndomain") return QRYPLNRCLCMNDOMAIN;
	else if (s == "qryplnrclcmnfile") return QRYPLNRCLCMNFILE;
	else if (s == "qryplnrclcref1nfile") return QRYPLNRCLCREF1NFILE;
	else if (s == "qryplnrclcsup1ncalc") return QRYPLNRCLCSUP1NCALC;
	else if (s == "qryplnrcliaamcalcenv") return QRYPLNRCLIAAMCALCENV;
	else if (s == "qryplnrcliaamcalcpar") return QRYPLNRCLIAAMCALCPAR;
	else if (s == "qryplnrclilist") return QRYPLNRCLILIST;
	else if (s == "qryplnrcliref1nfile") return QRYPLNRCLIREF1NFILE;
	else if (s == "qryplnrctpaenv") return QRYPLNRCTPAENV;
	else if (s == "qryplnrctpapar") return QRYPLNRCTPAPAR;
	else if (s == "qryplnrctpkcalcdomprp") return QRYPLNRCTPKCALCDOMPRP;
	else if (s == "qryplnrctpkcalcvar") return QRYPLNRCTPKCALCVAR;
	else if (s == "qryplnrctpkenvkey") return QRYPLNRCTPKENVKEY;
	else if (s == "qryplnrctpkparcat") return QRYPLNRCTPKPARCAT;
	else if (s == "qryplnrctpkparprop") return QRYPLNRCTPKPARPROP;
	else if (s == "qryplnrctplist") return QRYPLNRCTPLIST;
	else if (s == "qryplnrctpref1nfile") return QRYPLNRCTPREF1NFILE;
	else if (s == "qryplnrctpsup1ncalc") return QRYPLNRCTPSUP1NCALC;
	else if (s == "qryplnrctptpl1ncalc") return QRYPLNRCTPTPL1NCALC;
	else if (s == "qryplnrdgdlist") return QRYPLNRDGDLIST;
	else if (s == "qryplnrdomlist") return QRYPLNRDOMLIST;
	else if (s == "qryplnrdommncalc") return QRYPLNRDOMMNCALC;
	else if (s == "qryplnrdsn1nblock") return QRYPLNRDSN1NBLOCK;
	else if (s == "qryplnrdsn1nreticle") return QRYPLNRDSN1NRETICLE;
	else if (s == "qryplnrdsndrv1ndesign") return QRYPLNRDSNDRV1NDESIGN;
	else if (s == "qryplnrdsndsn1ndevice") return QRYPLNRDSNDSN1NDEVICE;
	else if (s == "qryplnrdsndsn1ndomain") return QRYPLNRDSNDSN1NDOMAIN;
	else if (s == "qryplnrdsndsn1ndomaingd") return QRYPLNRDSNDSN1NDOMAINGD;
	else if (s == "qryplnrdsndsn1nstack") return QRYPLNRDSNDSN1NSTACK;
	else if (s == "qryplnrdsnhk1narcguide") return QRYPLNRDSNHK1NARCGUIDE;
	else if (s == "qryplnrdsnhk1nlayer") return QRYPLNRDSNHK1NLAYER;
	else if (s == "qryplnrdsnhk1nlevel") return QRYPLNRDSNHK1NLEVEL;
	else if (s == "qryplnrdsnhk1nlineguide") return QRYPLNRDSNHK1NLINEGUIDE;
	else if (s == "qryplnrdsnhk1nstructure") return QRYPLNRDSNHK1NSTRUCTURE;
	else if (s == "qryplnrdsnhk1nvertex") return QRYPLNRDSNHK1NVERTEX;
	else if (s == "qryplnrdsnlist") return QRYPLNRDSNLIST;
	else if (s == "qryplnrdsnmod1ndesign") return QRYPLNRDSNMOD1NDESIGN;
	else if (s == "qryplnrdtpapar") return QRYPLNRDTPAPAR;
	else if (s == "qryplnrdtphk1nstructure") return QRYPLNRDTPHK1NSTRUCTURE;
	else if (s == "qryplnrdtpkparkey") return QRYPLNRDTPKPARKEY;
	else if (s == "qryplnrdtplist") return QRYPLNRDTPLIST;
	else if (s == "qryplnrdtpsup1ndevice") return QRYPLNRDTPSUP1NDEVICE;
	else if (s == "qryplnrdtptpl1ndevice") return QRYPLNRDTPTPL1NDEVICE;
	else if (s == "qryplnrdvcapar") return QRYPLNRDVCAPAR;
	else if (s == "qryplnrdvchk1narcguide") return QRYPLNRDVCHK1NARCGUIDE;
	else if (s == "qryplnrdvchk1nlineguide") return QRYPLNRDVCHK1NLINEGUIDE;
	else if (s == "qryplnrdvchk1nstructure") return QRYPLNRDVCHK1NSTRUCTURE;
	else if (s == "qryplnrdvchk1nvertex") return QRYPLNRDVCHK1NVERTEX;
	else if (s == "qryplnrdvclist") return QRYPLNRDVCLIST;
	else if (s == "qryplnrdvcsup1ndevice") return QRYPLNRDVCSUP1NDEVICE;
	else if (s == "qryplnrfillist") return QRYPLNRFILLIST;
	else if (s == "qryplnrfilmncalc") return QRYPLNRFILMNCALC;
	else if (s == "qryplnrlyr1nblock") return QRYPLNRLYR1NBLOCK;
	else if (s == "qryplnrlyr1nreticle") return QRYPLNRLYR1NRETICLE;
	else if (s == "qryplnrlyrlist") return QRYPLNRLYRLIST;
	else if (s == "qryplnrlyrmnstructure") return QRYPLNRLYRMNSTRUCTURE;
	else if (s == "qryplnrmat1nlayer") return QRYPLNRMAT1NLAYER;
	else if (s == "qryplnrmatapar") return QRYPLNRMATAPAR;
	else if (s == "qryplnrmatlist") return QRYPLNRMATLIST;
	else if (s == "qryplnrmatmod1nmaterial") return QRYPLNRMATMOD1NMATERIAL;
	else if (s == "qryplnrmatref1nfile") return QRYPLNRMATREF1NFILE;
	else if (s == "qryplnrprj1ncalc") return QRYPLNRPRJ1NCALC;
	else if (s == "qryplnrprj1ndesign") return QRYPLNRPRJ1NDESIGN;
	else if (s == "qryplnrprjlist") return QRYPLNRPRJLIST;
	else if (s == "qryplnrprjmntapeout") return QRYPLNRPRJMNTAPEOUT;
	else if (s == "qryplnrprsadetail") return QRYPLNRPRSADETAIL;
	else if (s == "qryplnrprslist") return QRYPLNRPRSLIST;
	else if (s == "qryplnrrtclist") return QRYPLNRRTCLIST;
	else if (s == "qryplnrsru1nblock") return QRYPLNRSRU1NBLOCK;
	else if (s == "qryplnrsrulist") return QRYPLNRSRULIST;
	else if (s == "qryplnrsrumnlayer") return QRYPLNRSRUMNLAYER;
	else if (s == "qryplnrsrumnstack") return QRYPLNRSRUMNSTACK;
	else if (s == "qryplnrsrusru1nface") return QRYPLNRSRUSRU1NFACE;
	else if (s == "qryplnrstkhk1nlayer") return QRYPLNRSTKHK1NLAYER;
	else if (s == "qryplnrstkhk1nlevel") return QRYPLNRSTKHK1NLEVEL;
	else if (s == "qryplnrstklist") return QRYPLNRSTKLIST;
	else if (s == "qryplnrstkmnstructure") return QRYPLNRSTKMNSTRUCTURE;
	else if (s == "qryplnrtpo1narray") return QRYPLNRTPO1NARRAY;
	else if (s == "qryplnrtpohk1nreticle") return QRYPLNRTPOHK1NRETICLE;
	else if (s == "qryplnrtpolist") return QRYPLNRTPOLIST;
	else if (s == "qryplnrtpomnproject") return QRYPLNRTPOMNPROJECT;
	else if (s == "qryplnrusgaaccess") return QRYPLNRUSGAACCESS;
	else if (s == "qryplnrusglist") return QRYPLNRUSGLIST;
	else if (s == "qryplnrusgmnuser") return QRYPLNRUSGMNUSER;
	else if (s == "qryplnrusr1nsession") return QRYPLNRUSR1NSESSION;
	else if (s == "qryplnrusraaccess") return QRYPLNRUSRAACCESS;
	else if (s == "qryplnrusrlist") return QRYPLNRUSRLIST;
	else if (s == "qryplnrusrmnusergroup") return QRYPLNRUSRMNUSERGROUP;
	else if (s == "rootplnr") return ROOTPLNR;
	else if (s == "sessplnr") return SESSPLNR;

	return(0);
};

string VecPlnrVJob::getSref(
			const uint ix
		) {
	if (ix == CRDPLNRARI) return("CrdPlnrAri");
	else if (ix == CRDPLNRARR) return("CrdPlnrArr");
	else if (ix == CRDPLNRCLC) return("CrdPlnrClc");
	else if (ix == CRDPLNRCLI) return("CrdPlnrCli");
	else if (ix == CRDPLNRCTP) return("CrdPlnrCtp");
	else if (ix == CRDPLNRDGD) return("CrdPlnrDgd");
	else if (ix == CRDPLNRDOM) return("CrdPlnrDom");
	else if (ix == CRDPLNRDSN) return("CrdPlnrDsn");
	else if (ix == CRDPLNRDTP) return("CrdPlnrDtp");
	else if (ix == CRDPLNRDVC) return("CrdPlnrDvc");
	else if (ix == CRDPLNRFIL) return("CrdPlnrFil");
	else if (ix == CRDPLNRLYR) return("CrdPlnrLyr");
	else if (ix == CRDPLNRMAT) return("CrdPlnrMat");
	else if (ix == CRDPLNRNAV) return("CrdPlnrNav");
	else if (ix == CRDPLNRPRJ) return("CrdPlnrPrj");
	else if (ix == CRDPLNRPRS) return("CrdPlnrPrs");
	else if (ix == CRDPLNRRTC) return("CrdPlnrRtc");
	else if (ix == CRDPLNRSRU) return("CrdPlnrSru");
	else if (ix == CRDPLNRSTK) return("CrdPlnrStk");
	else if (ix == CRDPLNRTPO) return("CrdPlnrTpo");
	else if (ix == CRDPLNRUSG) return("CrdPlnrUsg");
	else if (ix == CRDPLNRUSR) return("CrdPlnrUsr");
	else if (ix == DLGPLNRCLCEXPRTX) return("DlgPlnrClcExprtx");
	else if (ix == DLGPLNRCLCGENRPV) return("DlgPlnrClcGenrpv");
	else if (ix == DLGPLNRCLCUSECASE) return("DlgPlnrClcUsecase");
	else if (ix == DLGPLNRDSNGENPLT) return("DlgPlnrDsnGenplt");
	else if (ix == DLGPLNRFILDLDCPY) return("DlgPlnrFilDldcpy");
	else if (ix == DLGPLNRNAVLOAINI) return("DlgPlnrNavLoaini");
	else if (ix == DLGPLNRTPOUSECASE) return("DlgPlnrTpoUsecase");
	else if (ix == IEXPLNRINI) return("IexPlnrIni");
	else if (ix == JOBPLNRCLCDISPTEST) return("JobPlnrClcDisptest");
	else if (ix == JOBPLNRCLCQCDSLAB) return("JobPlnrClcQcdslab");
	else if (ix == JOBPLNRTPOEXAMPLES) return("JobPlnrTpoExamples");
	else if (ix == JOBPLNRTPOICABATCH1) return("JobPlnrTpoIcabatch1");
	else if (ix == JOBPLNRTPOICABATCH2) return("JobPlnrTpoIcabatch2");
	else if (ix == JOBPLNRTPOICABATCH3) return("JobPlnrTpoIcabatch3");
	else if (ix == JOBPLNRTPOUVSLIDES) return("JobPlnrTpoUvslides");
	else if (ix == PNLPLNRARIAMARRAYENV) return("PnlPlnrAriAMArrayEnv");
	else if (ix == PNLPLNRARIDETAIL) return("PnlPlnrAriDetail");
	else if (ix == PNLPLNRARIHEADBAR) return("PnlPlnrAriHeadbar");
	else if (ix == PNLPLNRARILIST) return("PnlPlnrAriList");
	else if (ix == PNLPLNRARIREC) return("PnlPlnrAriRec");
	else if (ix == PNLPLNRARR1NARRAYITEM) return("PnlPlnrArr1NArrayitem");
	else if (ix == PNLPLNRARRAENV) return("PnlPlnrArrAEnv");
	else if (ix == PNLPLNRARRDETAIL) return("PnlPlnrArrDetail");
	else if (ix == PNLPLNRARRHEADBAR) return("PnlPlnrArrHeadbar");
	else if (ix == PNLPLNRARRHK1NRETICLE) return("PnlPlnrArrHk1NReticle");
	else if (ix == PNLPLNRARRKENVKEY) return("PnlPlnrArrKEnvKey");
	else if (ix == PNLPLNRARRLIST) return("PnlPlnrArrList");
	else if (ix == PNLPLNRARRREC) return("PnlPlnrArrRec");
	else if (ix == PNLPLNRCLC1NMATERIAL) return("PnlPlnrClc1NMaterial");
	else if (ix == PNLPLNRCLCAENV) return("PnlPlnrClcAEnv");
	else if (ix == PNLPLNRCLCAPAR) return("PnlPlnrClcAPar");
	else if (ix == PNLPLNRCLCCAL1NCALCITEM) return("PnlPlnrClcCal1NCalcitem");
	else if (ix == PNLPLNRCLCDETAIL) return("PnlPlnrClcDetail");
	else if (ix == PNLPLNRCLCHEADBAR) return("PnlPlnrClcHeadbar");
	else if (ix == PNLPLNRCLCLIST) return("PnlPlnrClcList");
	else if (ix == PNLPLNRCLCMNDOMAIN) return("PnlPlnrClcMNDomain");
	else if (ix == PNLPLNRCLCMNFILE) return("PnlPlnrClcMNFile");
	else if (ix == PNLPLNRCLCPRE) return("PnlPlnrClcPre");
	else if (ix == PNLPLNRCLCREC) return("PnlPlnrClcRec");
	else if (ix == PNLPLNRCLCREF1NFILE) return("PnlPlnrClcRef1NFile");
	else if (ix == PNLPLNRCLCSUP1NCALC) return("PnlPlnrClcSup1NCalc");
	else if (ix == PNLPLNRCLCVIEW) return("PnlPlnrClcView");
	else if (ix == PNLPLNRCLIAAMCALCENV) return("PnlPlnrCliAAMCalcEnv");
	else if (ix == PNLPLNRCLIAAMCALCPAR) return("PnlPlnrCliAAMCalcPar");
	else if (ix == PNLPLNRCLIDETAIL) return("PnlPlnrCliDetail");
	else if (ix == PNLPLNRCLIHEADBAR) return("PnlPlnrCliHeadbar");
	else if (ix == PNLPLNRCLILIST) return("PnlPlnrCliList");
	else if (ix == PNLPLNRCLIREC) return("PnlPlnrCliRec");
	else if (ix == PNLPLNRCLIREF1NFILE) return("PnlPlnrCliRef1NFile");
	else if (ix == PNLPLNRCTPAENV) return("PnlPlnrCtpAEnv");
	else if (ix == PNLPLNRCTPAPAR) return("PnlPlnrCtpAPar");
	else if (ix == PNLPLNRCTPDETAIL) return("PnlPlnrCtpDetail");
	else if (ix == PNLPLNRCTPHEADBAR) return("PnlPlnrCtpHeadbar");
	else if (ix == PNLPLNRCTPKCALCDOMPRP) return("PnlPlnrCtpKCalcdomprp");
	else if (ix == PNLPLNRCTPKCALCVAR) return("PnlPlnrCtpKCalcvar");
	else if (ix == PNLPLNRCTPKENVKEY) return("PnlPlnrCtpKEnvKey");
	else if (ix == PNLPLNRCTPKPARCAT) return("PnlPlnrCtpKParCat");
	else if (ix == PNLPLNRCTPKPARPROP) return("PnlPlnrCtpKParProp");
	else if (ix == PNLPLNRCTPLIST) return("PnlPlnrCtpList");
	else if (ix == PNLPLNRCTPREC) return("PnlPlnrCtpRec");
	else if (ix == PNLPLNRCTPREF1NFILE) return("PnlPlnrCtpRef1NFile");
	else if (ix == PNLPLNRCTPSUP1NCALC) return("PnlPlnrCtpSup1NCalc");
	else if (ix == PNLPLNRCTPTPL1NCALC) return("PnlPlnrCtpTpl1NCalc");
	else if (ix == PNLPLNRDGDDETAIL) return("PnlPlnrDgdDetail");
	else if (ix == PNLPLNRDGDHEADBAR) return("PnlPlnrDgdHeadbar");
	else if (ix == PNLPLNRDGDLIST) return("PnlPlnrDgdList");
	else if (ix == PNLPLNRDGDREC) return("PnlPlnrDgdRec");
	else if (ix == PNLPLNRDOMDETAIL) return("PnlPlnrDomDetail");
	else if (ix == PNLPLNRDOMHEADBAR) return("PnlPlnrDomHeadbar");
	else if (ix == PNLPLNRDOMLIST) return("PnlPlnrDomList");
	else if (ix == PNLPLNRDOMMNCALC) return("PnlPlnrDomMNCalc");
	else if (ix == PNLPLNRDOMREC) return("PnlPlnrDomRec");
	else if (ix == PNLPLNRDSN1NBLOCK) return("PnlPlnrDsn1NBlock");
	else if (ix == PNLPLNRDSN1NRETICLE) return("PnlPlnrDsn1NReticle");
	else if (ix == PNLPLNRDSNDETAIL) return("PnlPlnrDsnDetail");
	else if (ix == PNLPLNRDSNDRV1NDESIGN) return("PnlPlnrDsnDrv1NDesign");
	else if (ix == PNLPLNRDSNDSN1NDEVICE) return("PnlPlnrDsnDsn1NDevice");
	else if (ix == PNLPLNRDSNDSN1NDOMAIN) return("PnlPlnrDsnDsn1NDomain");
	else if (ix == PNLPLNRDSNDSN1NDOMAINGD) return("PnlPlnrDsnDsn1NDomaingd");
	else if (ix == PNLPLNRDSNDSN1NSTACK) return("PnlPlnrDsnDsn1NStack");
	else if (ix == PNLPLNRDSNHEADBAR) return("PnlPlnrDsnHeadbar");
	else if (ix == PNLPLNRDSNHK1NARCGUIDE) return("PnlPlnrDsnHk1NArcguide");
	else if (ix == PNLPLNRDSNHK1NLAYER) return("PnlPlnrDsnHk1NLayer");
	else if (ix == PNLPLNRDSNHK1NLEVEL) return("PnlPlnrDsnHk1NLevel");
	else if (ix == PNLPLNRDSNHK1NLINEGUIDE) return("PnlPlnrDsnHk1NLineguide");
	else if (ix == PNLPLNRDSNHK1NSTRUCTURE) return("PnlPlnrDsnHk1NStructure");
	else if (ix == PNLPLNRDSNHK1NVERTEX) return("PnlPlnrDsnHk1NVertex");
	else if (ix == PNLPLNRDSNLIST) return("PnlPlnrDsnList");
	else if (ix == PNLPLNRDSNMOD1NDESIGN) return("PnlPlnrDsnMod1NDesign");
	else if (ix == PNLPLNRDSNPRE) return("PnlPlnrDsnPre");
	else if (ix == PNLPLNRDSNREC) return("PnlPlnrDsnRec");
	else if (ix == PNLPLNRDSNVIEWXY) return("PnlPlnrDsnViewxy");
	else if (ix == PNLPLNRDSNVIEWZ) return("PnlPlnrDsnViewz");
	else if (ix == PNLPLNRDTPAPAR) return("PnlPlnrDtpAPar");
	else if (ix == PNLPLNRDTPDETAIL) return("PnlPlnrDtpDetail");
	else if (ix == PNLPLNRDTPHEADBAR) return("PnlPlnrDtpHeadbar");
	else if (ix == PNLPLNRDTPHK1NSTRUCTURE) return("PnlPlnrDtpHk1NStructure");
	else if (ix == PNLPLNRDTPKPARKEY) return("PnlPlnrDtpKParKey");
	else if (ix == PNLPLNRDTPLIST) return("PnlPlnrDtpList");
	else if (ix == PNLPLNRDTPPRE) return("PnlPlnrDtpPre");
	else if (ix == PNLPLNRDTPREC) return("PnlPlnrDtpRec");
	else if (ix == PNLPLNRDTPSUP1NDEVICE) return("PnlPlnrDtpSup1NDevice");
	else if (ix == PNLPLNRDTPTPL1NDEVICE) return("PnlPlnrDtpTpl1NDevice");
	else if (ix == PNLPLNRDTPVIEW) return("PnlPlnrDtpView");
	else if (ix == PNLPLNRDVCAPAR) return("PnlPlnrDvcAPar");
	else if (ix == PNLPLNRDVCDETAIL) return("PnlPlnrDvcDetail");
	else if (ix == PNLPLNRDVCHEADBAR) return("PnlPlnrDvcHeadbar");
	else if (ix == PNLPLNRDVCHK1NARCGUIDE) return("PnlPlnrDvcHk1NArcguide");
	else if (ix == PNLPLNRDVCHK1NLINEGUIDE) return("PnlPlnrDvcHk1NLineguide");
	else if (ix == PNLPLNRDVCHK1NSTRUCTURE) return("PnlPlnrDvcHk1NStructure");
	else if (ix == PNLPLNRDVCHK1NVERTEX) return("PnlPlnrDvcHk1NVertex");
	else if (ix == PNLPLNRDVCLIST) return("PnlPlnrDvcList");
	else if (ix == PNLPLNRDVCPRE) return("PnlPlnrDvcPre");
	else if (ix == PNLPLNRDVCREC) return("PnlPlnrDvcRec");
	else if (ix == PNLPLNRDVCSUP1NDEVICE) return("PnlPlnrDvcSup1NDevice");
	else if (ix == PNLPLNRDVCVIEW) return("PnlPlnrDvcView");
	else if (ix == PNLPLNRFILDETAIL) return("PnlPlnrFilDetail");
	else if (ix == PNLPLNRFILHEADBAR) return("PnlPlnrFilHeadbar");
	else if (ix == PNLPLNRFILLIST) return("PnlPlnrFilList");
	else if (ix == PNLPLNRFILMNCALC) return("PnlPlnrFilMNCalc");
	else if (ix == PNLPLNRFILREC) return("PnlPlnrFilRec");
	else if (ix == PNLPLNRLYR1NBLOCK) return("PnlPlnrLyr1NBlock");
	else if (ix == PNLPLNRLYR1NRETICLE) return("PnlPlnrLyr1NReticle");
	else if (ix == PNLPLNRLYRDETAIL) return("PnlPlnrLyrDetail");
	else if (ix == PNLPLNRLYRHEADBAR) return("PnlPlnrLyrHeadbar");
	else if (ix == PNLPLNRLYRLIST) return("PnlPlnrLyrList");
	else if (ix == PNLPLNRLYRMNSTRUCTURE) return("PnlPlnrLyrMNStructure");
	else if (ix == PNLPLNRLYRREC) return("PnlPlnrLyrRec");
	else if (ix == PNLPLNRMAT1NLAYER) return("PnlPlnrMat1NLayer");
	else if (ix == PNLPLNRMATAPAR) return("PnlPlnrMatAPar");
	else if (ix == PNLPLNRMATDETAIL) return("PnlPlnrMatDetail");
	else if (ix == PNLPLNRMATHEADBAR) return("PnlPlnrMatHeadbar");
	else if (ix == PNLPLNRMATLIST) return("PnlPlnrMatList");
	else if (ix == PNLPLNRMATMOD1NMATERIAL) return("PnlPlnrMatMod1NMaterial");
	else if (ix == PNLPLNRMATREC) return("PnlPlnrMatRec");
	else if (ix == PNLPLNRMATREF1NFILE) return("PnlPlnrMatRef1NFile");
	else if (ix == PNLPLNRNAVADMIN) return("PnlPlnrNavAdmin");
	else if (ix == PNLPLNRNAVCALC) return("PnlPlnrNavCalc");
	else if (ix == PNLPLNRNAVDESIGN) return("PnlPlnrNavDesign");
	else if (ix == PNLPLNRNAVGLOBAL) return("PnlPlnrNavGlobal");
	else if (ix == PNLPLNRNAVHEADBAR) return("PnlPlnrNavHeadbar");
	else if (ix == PNLPLNRNAVLAYOUT) return("PnlPlnrNavLayout");
	else if (ix == PNLPLNRNAVPRE) return("PnlPlnrNavPre");
	else if (ix == PNLPLNRPRJ1NCALC) return("PnlPlnrPrj1NCalc");
	else if (ix == PNLPLNRPRJ1NDESIGN) return("PnlPlnrPrj1NDesign");
	else if (ix == PNLPLNRPRJDETAIL) return("PnlPlnrPrjDetail");
	else if (ix == PNLPLNRPRJHEADBAR) return("PnlPlnrPrjHeadbar");
	else if (ix == PNLPLNRPRJLIST) return("PnlPlnrPrjList");
	else if (ix == PNLPLNRPRJMNTAPEOUT) return("PnlPlnrPrjMNTapeout");
	else if (ix == PNLPLNRPRJREC) return("PnlPlnrPrjRec");
	else if (ix == PNLPLNRPRSADETAIL) return("PnlPlnrPrsADetail");
	else if (ix == PNLPLNRPRSDETAIL) return("PnlPlnrPrsDetail");
	else if (ix == PNLPLNRPRSHEADBAR) return("PnlPlnrPrsHeadbar");
	else if (ix == PNLPLNRPRSLIST) return("PnlPlnrPrsList");
	else if (ix == PNLPLNRPRSREC) return("PnlPlnrPrsRec");
	else if (ix == PNLPLNRRTCDETAIL) return("PnlPlnrRtcDetail");
	else if (ix == PNLPLNRRTCHEADBAR) return("PnlPlnrRtcHeadbar");
	else if (ix == PNLPLNRRTCLIST) return("PnlPlnrRtcList");
	else if (ix == PNLPLNRRTCREC) return("PnlPlnrRtcRec");
	else if (ix == PNLPLNRSRU1NBLOCK) return("PnlPlnrSru1NBlock");
	else if (ix == PNLPLNRSRUDETAIL) return("PnlPlnrSruDetail");
	else if (ix == PNLPLNRSRUHEADBAR) return("PnlPlnrSruHeadbar");
	else if (ix == PNLPLNRSRULIST) return("PnlPlnrSruList");
	else if (ix == PNLPLNRSRUMNLAYER) return("PnlPlnrSruMNLayer");
	else if (ix == PNLPLNRSRUMNSTACK) return("PnlPlnrSruMNStack");
	else if (ix == PNLPLNRSRUREC) return("PnlPlnrSruRec");
	else if (ix == PNLPLNRSRUSRU1NFACE) return("PnlPlnrSruSru1NFace");
	else if (ix == PNLPLNRSTKDETAIL) return("PnlPlnrStkDetail");
	else if (ix == PNLPLNRSTKHEADBAR) return("PnlPlnrStkHeadbar");
	else if (ix == PNLPLNRSTKHK1NLAYER) return("PnlPlnrStkHk1NLayer");
	else if (ix == PNLPLNRSTKHK1NLEVEL) return("PnlPlnrStkHk1NLevel");
	else if (ix == PNLPLNRSTKLIST) return("PnlPlnrStkList");
	else if (ix == PNLPLNRSTKMNSTRUCTURE) return("PnlPlnrStkMNStructure");
	else if (ix == PNLPLNRSTKPRE) return("PnlPlnrStkPre");
	else if (ix == PNLPLNRSTKREC) return("PnlPlnrStkRec");
	else if (ix == PNLPLNRSTKVIEW) return("PnlPlnrStkView");
	else if (ix == PNLPLNRTPO1NARRAY) return("PnlPlnrTpo1NArray");
	else if (ix == PNLPLNRTPODETAIL) return("PnlPlnrTpoDetail");
	else if (ix == PNLPLNRTPOFLOORPLAN) return("PnlPlnrTpoFloorplan");
	else if (ix == PNLPLNRTPOHEADBAR) return("PnlPlnrTpoHeadbar");
	else if (ix == PNLPLNRTPOHK1NRETICLE) return("PnlPlnrTpoHk1NReticle");
	else if (ix == PNLPLNRTPOLIST) return("PnlPlnrTpoList");
	else if (ix == PNLPLNRTPOMNPROJECT) return("PnlPlnrTpoMNProject");
	else if (ix == PNLPLNRTPOREC) return("PnlPlnrTpoRec");
	else if (ix == PNLPLNRUSGAACCESS) return("PnlPlnrUsgAAccess");
	else if (ix == PNLPLNRUSGDETAIL) return("PnlPlnrUsgDetail");
	else if (ix == PNLPLNRUSGHEADBAR) return("PnlPlnrUsgHeadbar");
	else if (ix == PNLPLNRUSGLIST) return("PnlPlnrUsgList");
	else if (ix == PNLPLNRUSGMNUSER) return("PnlPlnrUsgMNUser");
	else if (ix == PNLPLNRUSGREC) return("PnlPlnrUsgRec");
	else if (ix == PNLPLNRUSR1NSESSION) return("PnlPlnrUsr1NSession");
	else if (ix == PNLPLNRUSRAACCESS) return("PnlPlnrUsrAAccess");
	else if (ix == PNLPLNRUSRDETAIL) return("PnlPlnrUsrDetail");
	else if (ix == PNLPLNRUSRHEADBAR) return("PnlPlnrUsrHeadbar");
	else if (ix == PNLPLNRUSRLIST) return("PnlPlnrUsrList");
	else if (ix == PNLPLNRUSRMNUSERGROUP) return("PnlPlnrUsrMNUsergroup");
	else if (ix == PNLPLNRUSRREC) return("PnlPlnrUsrRec");
	else if (ix == QRYPLNRARIAMARRAYENV) return("QryPlnrAriAMArrayEnv");
	else if (ix == QRYPLNRARILIST) return("QryPlnrAriList");
	else if (ix == QRYPLNRARR1NARRAYITEM) return("QryPlnrArr1NArrayitem");
	else if (ix == QRYPLNRARRAENV) return("QryPlnrArrAEnv");
	else if (ix == QRYPLNRARRHK1NRETICLE) return("QryPlnrArrHk1NReticle");
	else if (ix == QRYPLNRARRKENVKEY) return("QryPlnrArrKEnvKey");
	else if (ix == QRYPLNRARRLIST) return("QryPlnrArrList");
	else if (ix == QRYPLNRCLC1NMATERIAL) return("QryPlnrClc1NMaterial");
	else if (ix == QRYPLNRCLCAENV) return("QryPlnrClcAEnv");
	else if (ix == QRYPLNRCLCAPAR) return("QryPlnrClcAPar");
	else if (ix == QRYPLNRCLCCAL1NCALCITEM) return("QryPlnrClcCal1NCalcitem");
	else if (ix == QRYPLNRCLCLIST) return("QryPlnrClcList");
	else if (ix == QRYPLNRCLCMNDOMAIN) return("QryPlnrClcMNDomain");
	else if (ix == QRYPLNRCLCMNFILE) return("QryPlnrClcMNFile");
	else if (ix == QRYPLNRCLCREF1NFILE) return("QryPlnrClcRef1NFile");
	else if (ix == QRYPLNRCLCSUP1NCALC) return("QryPlnrClcSup1NCalc");
	else if (ix == QRYPLNRCLIAAMCALCENV) return("QryPlnrCliAAMCalcEnv");
	else if (ix == QRYPLNRCLIAAMCALCPAR) return("QryPlnrCliAAMCalcPar");
	else if (ix == QRYPLNRCLILIST) return("QryPlnrCliList");
	else if (ix == QRYPLNRCLIREF1NFILE) return("QryPlnrCliRef1NFile");
	else if (ix == QRYPLNRCTPAENV) return("QryPlnrCtpAEnv");
	else if (ix == QRYPLNRCTPAPAR) return("QryPlnrCtpAPar");
	else if (ix == QRYPLNRCTPKCALCDOMPRP) return("QryPlnrCtpKCalcdomprp");
	else if (ix == QRYPLNRCTPKCALCVAR) return("QryPlnrCtpKCalcvar");
	else if (ix == QRYPLNRCTPKENVKEY) return("QryPlnrCtpKEnvKey");
	else if (ix == QRYPLNRCTPKPARCAT) return("QryPlnrCtpKParCat");
	else if (ix == QRYPLNRCTPKPARPROP) return("QryPlnrCtpKParProp");
	else if (ix == QRYPLNRCTPLIST) return("QryPlnrCtpList");
	else if (ix == QRYPLNRCTPREF1NFILE) return("QryPlnrCtpRef1NFile");
	else if (ix == QRYPLNRCTPSUP1NCALC) return("QryPlnrCtpSup1NCalc");
	else if (ix == QRYPLNRCTPTPL1NCALC) return("QryPlnrCtpTpl1NCalc");
	else if (ix == QRYPLNRDGDLIST) return("QryPlnrDgdList");
	else if (ix == QRYPLNRDOMLIST) return("QryPlnrDomList");
	else if (ix == QRYPLNRDOMMNCALC) return("QryPlnrDomMNCalc");
	else if (ix == QRYPLNRDSN1NBLOCK) return("QryPlnrDsn1NBlock");
	else if (ix == QRYPLNRDSN1NRETICLE) return("QryPlnrDsn1NReticle");
	else if (ix == QRYPLNRDSNDRV1NDESIGN) return("QryPlnrDsnDrv1NDesign");
	else if (ix == QRYPLNRDSNDSN1NDEVICE) return("QryPlnrDsnDsn1NDevice");
	else if (ix == QRYPLNRDSNDSN1NDOMAIN) return("QryPlnrDsnDsn1NDomain");
	else if (ix == QRYPLNRDSNDSN1NDOMAINGD) return("QryPlnrDsnDsn1NDomaingd");
	else if (ix == QRYPLNRDSNDSN1NSTACK) return("QryPlnrDsnDsn1NStack");
	else if (ix == QRYPLNRDSNHK1NARCGUIDE) return("QryPlnrDsnHk1NArcguide");
	else if (ix == QRYPLNRDSNHK1NLAYER) return("QryPlnrDsnHk1NLayer");
	else if (ix == QRYPLNRDSNHK1NLEVEL) return("QryPlnrDsnHk1NLevel");
	else if (ix == QRYPLNRDSNHK1NLINEGUIDE) return("QryPlnrDsnHk1NLineguide");
	else if (ix == QRYPLNRDSNHK1NSTRUCTURE) return("QryPlnrDsnHk1NStructure");
	else if (ix == QRYPLNRDSNHK1NVERTEX) return("QryPlnrDsnHk1NVertex");
	else if (ix == QRYPLNRDSNLIST) return("QryPlnrDsnList");
	else if (ix == QRYPLNRDSNMOD1NDESIGN) return("QryPlnrDsnMod1NDesign");
	else if (ix == QRYPLNRDTPAPAR) return("QryPlnrDtpAPar");
	else if (ix == QRYPLNRDTPHK1NSTRUCTURE) return("QryPlnrDtpHk1NStructure");
	else if (ix == QRYPLNRDTPKPARKEY) return("QryPlnrDtpKParKey");
	else if (ix == QRYPLNRDTPLIST) return("QryPlnrDtpList");
	else if (ix == QRYPLNRDTPSUP1NDEVICE) return("QryPlnrDtpSup1NDevice");
	else if (ix == QRYPLNRDTPTPL1NDEVICE) return("QryPlnrDtpTpl1NDevice");
	else if (ix == QRYPLNRDVCAPAR) return("QryPlnrDvcAPar");
	else if (ix == QRYPLNRDVCHK1NARCGUIDE) return("QryPlnrDvcHk1NArcguide");
	else if (ix == QRYPLNRDVCHK1NLINEGUIDE) return("QryPlnrDvcHk1NLineguide");
	else if (ix == QRYPLNRDVCHK1NSTRUCTURE) return("QryPlnrDvcHk1NStructure");
	else if (ix == QRYPLNRDVCHK1NVERTEX) return("QryPlnrDvcHk1NVertex");
	else if (ix == QRYPLNRDVCLIST) return("QryPlnrDvcList");
	else if (ix == QRYPLNRDVCSUP1NDEVICE) return("QryPlnrDvcSup1NDevice");
	else if (ix == QRYPLNRFILLIST) return("QryPlnrFilList");
	else if (ix == QRYPLNRFILMNCALC) return("QryPlnrFilMNCalc");
	else if (ix == QRYPLNRLYR1NBLOCK) return("QryPlnrLyr1NBlock");
	else if (ix == QRYPLNRLYR1NRETICLE) return("QryPlnrLyr1NReticle");
	else if (ix == QRYPLNRLYRLIST) return("QryPlnrLyrList");
	else if (ix == QRYPLNRLYRMNSTRUCTURE) return("QryPlnrLyrMNStructure");
	else if (ix == QRYPLNRMAT1NLAYER) return("QryPlnrMat1NLayer");
	else if (ix == QRYPLNRMATAPAR) return("QryPlnrMatAPar");
	else if (ix == QRYPLNRMATLIST) return("QryPlnrMatList");
	else if (ix == QRYPLNRMATMOD1NMATERIAL) return("QryPlnrMatMod1NMaterial");
	else if (ix == QRYPLNRMATREF1NFILE) return("QryPlnrMatRef1NFile");
	else if (ix == QRYPLNRPRJ1NCALC) return("QryPlnrPrj1NCalc");
	else if (ix == QRYPLNRPRJ1NDESIGN) return("QryPlnrPrj1NDesign");
	else if (ix == QRYPLNRPRJLIST) return("QryPlnrPrjList");
	else if (ix == QRYPLNRPRJMNTAPEOUT) return("QryPlnrPrjMNTapeout");
	else if (ix == QRYPLNRPRSADETAIL) return("QryPlnrPrsADetail");
	else if (ix == QRYPLNRPRSLIST) return("QryPlnrPrsList");
	else if (ix == QRYPLNRRTCLIST) return("QryPlnrRtcList");
	else if (ix == QRYPLNRSRU1NBLOCK) return("QryPlnrSru1NBlock");
	else if (ix == QRYPLNRSRULIST) return("QryPlnrSruList");
	else if (ix == QRYPLNRSRUMNLAYER) return("QryPlnrSruMNLayer");
	else if (ix == QRYPLNRSRUMNSTACK) return("QryPlnrSruMNStack");
	else if (ix == QRYPLNRSRUSRU1NFACE) return("QryPlnrSruSru1NFace");
	else if (ix == QRYPLNRSTKHK1NLAYER) return("QryPlnrStkHk1NLayer");
	else if (ix == QRYPLNRSTKHK1NLEVEL) return("QryPlnrStkHk1NLevel");
	else if (ix == QRYPLNRSTKLIST) return("QryPlnrStkList");
	else if (ix == QRYPLNRSTKMNSTRUCTURE) return("QryPlnrStkMNStructure");
	else if (ix == QRYPLNRTPO1NARRAY) return("QryPlnrTpo1NArray");
	else if (ix == QRYPLNRTPOHK1NRETICLE) return("QryPlnrTpoHk1NReticle");
	else if (ix == QRYPLNRTPOLIST) return("QryPlnrTpoList");
	else if (ix == QRYPLNRTPOMNPROJECT) return("QryPlnrTpoMNProject");
	else if (ix == QRYPLNRUSGAACCESS) return("QryPlnrUsgAAccess");
	else if (ix == QRYPLNRUSGLIST) return("QryPlnrUsgList");
	else if (ix == QRYPLNRUSGMNUSER) return("QryPlnrUsgMNUser");
	else if (ix == QRYPLNRUSR1NSESSION) return("QryPlnrUsr1NSession");
	else if (ix == QRYPLNRUSRAACCESS) return("QryPlnrUsrAAccess");
	else if (ix == QRYPLNRUSRLIST) return("QryPlnrUsrList");
	else if (ix == QRYPLNRUSRMNUSERGROUP) return("QryPlnrUsrMNUsergroup");
	else if (ix == ROOTPLNR) return("RootPlnr");
	else if (ix == SESSPLNR) return("SessPlnr");

	return("");
};


