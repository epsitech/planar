/**
  * \file VecPlnrVCall.cpp
  * vector VecPlnrVCall (implementation)
  * \author Alexander Wirthmueller
  * \date created: 4 Dec 2015
  * \date modified: 4 Dec 2015
  */

#include "VecPlnrVCall.h"

/******************************************************************************
 namespace VecPlnrVCall
 ******************************************************************************/

uint VecPlnrVCall::getIx(
			const string& sref
		) {
	string s = StrMod::lc(sref);

	if (s == "callplnraccess") return CALLPLNRACCESS;
	else if (s == "callplnragdjrmod.agdeq") return CALLPLNRAGDJRMOD_AGDEQ;
	else if (s == "callplnragdmod") return CALLPLNRAGDMOD;
	else if (s == "callplnragdmod.dageq") return CALLPLNRAGDMOD_DAGEQ;
	else if (s == "callplnragdmod.hkthkueq") return CALLPLNRAGDMOD_HKTHKUEQ;
	else if (s == "callplnragdrvtxmod.agdeq") return CALLPLNRAGDRVTXMOD_AGDEQ;
	else if (s == "callplnragdrvtxmod.vtxeq") return CALLPLNRAGDRVTXMOD_VTXEQ;
	else if (s == "callplnragdupd.refeq") return CALLPLNRAGDUPD_REFEQ;
	else if (s == "callplnrarimod") return CALLPLNRARIMOD;
	else if (s == "callplnrarimod.arreq") return CALLPLNRARIMOD_ARREQ;
	else if (s == "callplnrariupd.refeq") return CALLPLNRARIUPD_REFEQ;
	else if (s == "callplnrarraenvmod.arreq") return CALLPLNRARRAENVMOD_ARREQ;
	else if (s == "callplnrarrmod") return CALLPLNRARRMOD;
	else if (s == "callplnrarrmod.tpoeq") return CALLPLNRARRMOD_TPOEQ;
	else if (s == "callplnrarrupd.refeq") return CALLPLNRARRUPD_REFEQ;
	else if (s == "callplnrblkmod") return CALLPLNRBLKMOD;
	else if (s == "callplnrblkmod.dsneq") return CALLPLNRBLKMOD_DSNEQ;
	else if (s == "callplnrblkmod.lyreq") return CALLPLNRBLKMOD_LYREQ;
	else if (s == "callplnrblkmod.srueq") return CALLPLNRBLKMOD_SRUEQ;
	else if (s == "callplnrblkupd.refeq") return CALLPLNRBLKUPD_REFEQ;
	else if (s == "callplnrboolvalpreset") return CALLPLNRBOOLVALPRESET;
	else if (s == "callplnrcalaenvmod.caleq") return CALLPLNRCALAENVMOD_CALEQ;
	else if (s == "callplnrcalaparmod.caleq") return CALLPLNRCALAPARMOD_CALEQ;
	else if (s == "callplnrcalmod") return CALLPLNRCALMOD;
	else if (s == "callplnrcalmod.prjeq") return CALLPLNRCALMOD_PRJEQ;
	else if (s == "callplnrcalmod.supeq") return CALLPLNRCALMOD_SUPEQ;
	else if (s == "callplnrcalmod.tpleq") return CALLPLNRCALMOD_TPLEQ;
	else if (s == "callplnrcalrdommod.caleq") return CALLPLNRCALRDOMMOD_CALEQ;
	else if (s == "callplnrcalrdommod.domeq") return CALLPLNRCALRDOMMOD_DOMEQ;
	else if (s == "callplnrcalrfilmod.caleq") return CALLPLNRCALRFILMOD_CALEQ;
	else if (s == "callplnrcalrfilmod.fileq") return CALLPLNRCALRFILMOD_FILEQ;
	else if (s == "callplnrcalupd.refeq") return CALLPLNRCALUPD_REFEQ;
	else if (s == "callplnrclimod") return CALLPLNRCLIMOD;
	else if (s == "callplnrclimod.caleq") return CALLPLNRCLIMOD_CALEQ;
	else if (s == "callplnrcliupd.refeq") return CALLPLNRCLIUPD_REFEQ;
	else if (s == "callplnrcntaparmod.usreq") return CALLPLNRCNTAPARMOD_USREQ;
	else if (s == "callplnrcrdactive") return CALLPLNRCRDACTIVE;
	else if (s == "callplnrcrdclose") return CALLPLNRCRDCLOSE;
	else if (s == "callplnrcrdopen") return CALLPLNRCRDOPEN;
	else if (s == "callplnrdblvalpreset") return CALLPLNRDBLVALPRESET;
	else if (s == "callplnrdevaparmod.deveq") return CALLPLNRDEVAPARMOD_DEVEQ;
	else if (s == "callplnrdevaparmod.dsneq") return CALLPLNRDEVAPARMOD_DSNEQ;
	else if (s == "callplnrdevjmodmod.deveq") return CALLPLNRDEVJMODMOD_DEVEQ;
	else if (s == "callplnrdevmod") return CALLPLNRDEVMOD;
	else if (s == "callplnrdevmod.dsneq") return CALLPLNRDEVMOD_DSNEQ;
	else if (s == "callplnrdevmod.supeq") return CALLPLNRDEVMOD_SUPEQ;
	else if (s == "callplnrdevmod.tpleq") return CALLPLNRDEVMOD_TPLEQ;
	else if (s == "callplnrdevupd.refeq") return CALLPLNRDEVUPD_REFEQ;
	else if (s == "callplnrdgdjmod.dgdeq") return CALLPLNRDGDJMOD_DGDEQ;
	else if (s == "callplnrdgdmod") return CALLPLNRDGDMOD;
	else if (s == "callplnrdgdmod.dsneq") return CALLPLNRDGDMOD_DSNEQ;
	else if (s == "callplnrdgdupd.refeq") return CALLPLNRDGDUPD_REFEQ;
	else if (s == "callplnrdlgclose") return CALLPLNRDLGCLOSE;
	else if (s == "callplnrdomjmod.domeq") return CALLPLNRDOMJMOD_DOMEQ;
	else if (s == "callplnrdommod") return CALLPLNRDOMMOD;
	else if (s == "callplnrdommod.dsneq") return CALLPLNRDOMMOD_DSNEQ;
	else if (s == "callplnrdomupd.refeq") return CALLPLNRDOMUPD_REFEQ;
	else if (s == "callplnrdsn.dimeq") return CALLPLNRDSN_DIMEQ;
	else if (s == "callplnrdsn.modeq") return CALLPLNRDSN_MODEQ;
	else if (s == "callplnrdsn.typeq") return CALLPLNRDSN_TYPEQ;
	else if (s == "callplnrdsnmod") return CALLPLNRDSNMOD;
	else if (s == "callplnrdsnmod.drveq") return CALLPLNRDSNMOD_DRVEQ;
	else if (s == "callplnrdsnmod.modeq") return CALLPLNRDSNMOD_MODEQ;
	else if (s == "callplnrdsnmod.prjeq") return CALLPLNRDSNMOD_PRJEQ;
	else if (s == "callplnrdsnmod.retreueq") return CALLPLNRDSNMOD_RETREUEQ;
	else if (s == "callplnrdsnupd.refeq") return CALLPLNRDSNUPD_REFEQ;
	else if (s == "callplnrfcemod") return CALLPLNRFCEMOD;
	else if (s == "callplnrfcemod.dfceq") return CALLPLNRFCEMOD_DFCEQ;
	else if (s == "callplnrfcemod.srueq") return CALLPLNRFCEMOD_SRUEQ;
	else if (s == "callplnrfcervtxmod.fceeq") return CALLPLNRFCERVTXMOD_FCEEQ;
	else if (s == "callplnrfcervtxmod.vtxeq") return CALLPLNRFCERVTXMOD_VTXEQ;
	else if (s == "callplnrfceupd.refeq") return CALLPLNRFCEUPD_REFEQ;
	else if (s == "callplnrfil.clueq") return CALLPLNRFIL_CLUEQ;
	else if (s == "callplnrfilmod") return CALLPLNRFILMOD;
	else if (s == "callplnrfilmod.clueq") return CALLPLNRFILMOD_CLUEQ;
	else if (s == "callplnrfilmod.retreueq") return CALLPLNRFILMOD_RETREUEQ;
	else if (s == "callplnrfilupd.refeq") return CALLPLNRFILUPD_REFEQ;
	else if (s == "callplnrhusrrunvmod.crdusreq") return CALLPLNRHUSRRUNVMOD_CRDUSREQ;
	else if (s == "callplnrintvalpreset") return CALLPLNRINTVALPRESET;
	else if (s == "callplnrixpreset") return CALLPLNRIXPRESET;
	else if (s == "callplnrklkjkeymod.klsakeyeq") return CALLPLNRKLKJKEYMOD_KLSAKEYEQ;
	else if (s == "callplnrklsakeymod.klseq") return CALLPLNRKLSAKEYMOD_KLSEQ;
	else if (s == "callplnrklsakeymod.klsmtburfeq") return CALLPLNRKLSAKEYMOD_KLSMTBURFEQ;
	else if (s == "callplnrlgdmod") return CALLPLNRLGDMOD;
	else if (s == "callplnrlgdmod.hkthkueq") return CALLPLNRLGDMOD_HKTHKUEQ;
	else if (s == "callplnrlgdrlgdmod.dsleq") return CALLPLNRLGDRLGDMOD_DSLEQ;
	else if (s == "callplnrlgdrlgdmod.dvleq") return CALLPLNRLGDRLGDMOD_DVLEQ;
	else if (s == "callplnrlgdrvtxmod.lgdeq") return CALLPLNRLGDRVTXMOD_LGDEQ;
	else if (s == "callplnrlgdrvtxmod.vtxeq") return CALLPLNRLGDRVTXMOD_VTXEQ;
	else if (s == "callplnrlgdupd.refeq") return CALLPLNRLGDUPD_REFEQ;
	else if (s == "callplnrlog") return CALLPLNRLOG;
	else if (s == "callplnrlogout") return CALLPLNRLOGOUT;
	else if (s == "callplnrlvljzmod.lvleq") return CALLPLNRLVLJZMOD_LVLEQ;
	else if (s == "callplnrlvlmod") return CALLPLNRLVLMOD;
	else if (s == "callplnrlvlmod.hkthkueq") return CALLPLNRLVLMOD_HKTHKUEQ;
	else if (s == "callplnrlvlrlvlmod.dlveq") return CALLPLNRLVLRLVLMOD_DLVEQ;
	else if (s == "callplnrlvlrlvlmod.slveq") return CALLPLNRLVLRLVLMOD_SLVEQ;
	else if (s == "callplnrlvlupd.refeq") return CALLPLNRLVLUPD_REFEQ;
	else if (s == "callplnrlyrjmatmod.lyreq") return CALLPLNRLYRJMATMOD_LYREQ;
	else if (s == "callplnrlyrjmod.lyreq") return CALLPLNRLYRJMOD_LYREQ;
	else if (s == "callplnrlyrmod") return CALLPLNRLYRMOD;
	else if (s == "callplnrlyrmod.hkthkueq") return CALLPLNRLYRMOD_HKTHKUEQ;
	else if (s == "callplnrlyrmod.mateq") return CALLPLNRLYRMOD_MATEQ;
	else if (s == "callplnrlyrrsrumod.lyreq") return CALLPLNRLYRRSRUMOD_LYREQ;
	else if (s == "callplnrlyrrsrumod.srueq") return CALLPLNRLYRRSRUMOD_SRUEQ;
	else if (s == "callplnrlyrupd.refeq") return CALLPLNRLYRUPD_REFEQ;
	else if (s == "callplnrmastclaim") return CALLPLNRMASTCLAIM;
	else if (s == "callplnrmastslvchg") return CALLPLNRMASTSLVCHG;
	else if (s == "callplnrmataparmod.dsneq") return CALLPLNRMATAPARMOD_DSNEQ;
	else if (s == "callplnrmataparmod.mateq") return CALLPLNRMATAPARMOD_MATEQ;
	else if (s == "callplnrmatmod") return CALLPLNRMATMOD;
	else if (s == "callplnrmatmod.caleq") return CALLPLNRMATMOD_CALEQ;
	else if (s == "callplnrmatmod.supeq") return CALLPLNRMATMOD_SUPEQ;
	else if (s == "callplnrmatupd.refeq") return CALLPLNRMATUPD_REFEQ;
	else if (s == "callplnrprjjstemod.prjeq") return CALLPLNRPRJJSTEMOD_PRJEQ;
	else if (s == "callplnrprjmod") return CALLPLNRPRJMOD;
	else if (s == "callplnrprjrtpomod.prjeq") return CALLPLNRPRJRTPOMOD_PRJEQ;
	else if (s == "callplnrprjrtpomod.tpoeq") return CALLPLNRPRJRTPOMOD_TPOEQ;
	else if (s == "callplnrprjupd.refeq") return CALLPLNRPRJUPD_REFEQ;
	else if (s == "callplnrprsadetmod.prseq") return CALLPLNRPRSADETMOD_PRSEQ;
	else if (s == "callplnrprsjlnmmod.prseq") return CALLPLNRPRSJLNMMOD_PRSEQ;
	else if (s == "callplnrprsmod") return CALLPLNRPRSMOD;
	else if (s == "callplnrprsupd.refeq") return CALLPLNRPRSUPD_REFEQ;
	else if (s == "callplnrrefpreset") return CALLPLNRREFPRESET;
	else if (s == "callplnrrefspreset") return CALLPLNRREFSPRESET;
	else if (s == "callplnrrtcmod") return CALLPLNRRTCMOD;
	else if (s == "callplnrrtcmod.dsneq") return CALLPLNRRTCMOD_DSNEQ;
	else if (s == "callplnrrtcmod.hkthkueq") return CALLPLNRRTCMOD_HKTHKUEQ;
	else if (s == "callplnrrtcmod.lyreq") return CALLPLNRRTCMOD_LYREQ;
	else if (s == "callplnrrtcupd.refeq") return CALLPLNRRTCUPD_REFEQ;
	else if (s == "callplnrsesmod") return CALLPLNRSESMOD;
	else if (s == "callplnrsesmod.usreq") return CALLPLNRSESMOD_USREQ;
	else if (s == "callplnrsesupd.refeq") return CALLPLNRSESUPD_REFEQ;
	else if (s == "callplnrsrefpreset") return CALLPLNRSREFPRESET;
	else if (s == "callplnrsrumod") return CALLPLNRSRUMOD;
	else if (s == "callplnrsrumod.hkthkueq") return CALLPLNRSRUMOD_HKTHKUEQ;
	else if (s == "callplnrsruupd.refeq") return CALLPLNRSRUUPD_REFEQ;
	else if (s == "callplnrstatchg") return CALLPLNRSTATCHG;
	else if (s == "callplnrstgchg") return CALLPLNRSTGCHG;
	else if (s == "callplnrstkjmodmod.stkeq") return CALLPLNRSTKJMODMOD_STKEQ;
	else if (s == "callplnrstkjnmod.stkeq") return CALLPLNRSTKJNMOD_STKEQ;
	else if (s == "callplnrstkmod") return CALLPLNRSTKMOD;
	else if (s == "callplnrstkmod.dsneq") return CALLPLNRSTKMOD_DSNEQ;
	else if (s == "callplnrstkrsrumod.srueq") return CALLPLNRSTKRSRUMOD_SRUEQ;
	else if (s == "callplnrstkrsrumod.stkeq") return CALLPLNRSTKRSRUMOD_STKEQ;
	else if (s == "callplnrstkupd.refeq") return CALLPLNRSTKUPD_REFEQ;
	else if (s == "callplnrstubchg") return CALLPLNRSTUBCHG;
	else if (s == "callplnrtpojstemod.tpoeq") return CALLPLNRTPOJSTEMOD_TPOEQ;
	else if (s == "callplnrtpomod") return CALLPLNRTPOMOD;
	else if (s == "callplnrtpoupd.refeq") return CALLPLNRTPOUPD_REFEQ;
	else if (s == "callplnrtxtvalpreset") return CALLPLNRTXTVALPRESET;
	else if (s == "callplnrusgaaccmod.usgeq") return CALLPLNRUSGAACCMOD_USGEQ;
	else if (s == "callplnrusgmod") return CALLPLNRUSGMOD;
	else if (s == "callplnrusgupd.refeq") return CALLPLNRUSGUPD_REFEQ;
	else if (s == "callplnrusraaccmod.usreq") return CALLPLNRUSRAACCMOD_USREQ;
	else if (s == "callplnrusrjstemod.usreq") return CALLPLNRUSRJSTEMOD_USREQ;
	else if (s == "callplnrusrmod") return CALLPLNRUSRMOD;
	else if (s == "callplnrusrrusgmod.usgeq") return CALLPLNRUSRRUSGMOD_USGEQ;
	else if (s == "callplnrusrrusgmod.usreq") return CALLPLNRUSRRUSGMOD_USREQ;
	else if (s == "callplnrusrupd.refeq") return CALLPLNRUSRUPD_REFEQ;
	else if (s == "callplnrvtxjmod.vtxeq") return CALLPLNRVTXJMOD_VTXEQ;
	else if (s == "callplnrvtxmod") return CALLPLNRVTXMOD;
	else if (s == "callplnrvtxmod.hkthkueq") return CALLPLNRVTXMOD_HKTHKUEQ;
	else if (s == "callplnrvtxrvtxmod.dsveq") return CALLPLNRVTXRVTXMOD_DSVEQ;
	else if (s == "callplnrvtxrvtxmod.dvveq") return CALLPLNRVTXRVTXMOD_DVVEQ;
	else if (s == "callplnrvtxupd.refeq") return CALLPLNRVTXUPD_REFEQ;

	return(0);
};

string VecPlnrVCall::getSref(
			const uint ix
		) {
	if (ix == CALLPLNRACCESS) return("CallPlnrAccess");
	else if (ix == CALLPLNRAGDJRMOD_AGDEQ) return("CallPlnrAgdJrMod.agdEq");
	else if (ix == CALLPLNRAGDMOD) return("CallPlnrAgdMod");
	else if (ix == CALLPLNRAGDMOD_DAGEQ) return("CallPlnrAgdMod.dagEq");
	else if (ix == CALLPLNRAGDMOD_HKTHKUEQ) return("CallPlnrAgdMod.hktHkuEq");
	else if (ix == CALLPLNRAGDRVTXMOD_AGDEQ) return("CallPlnrAgdRvtxMod.agdEq");
	else if (ix == CALLPLNRAGDRVTXMOD_VTXEQ) return("CallPlnrAgdRvtxMod.vtxEq");
	else if (ix == CALLPLNRAGDUPD_REFEQ) return("CallPlnrAgdUpd.refEq");
	else if (ix == CALLPLNRARIMOD) return("CallPlnrAriMod");
	else if (ix == CALLPLNRARIMOD_ARREQ) return("CallPlnrAriMod.arrEq");
	else if (ix == CALLPLNRARIUPD_REFEQ) return("CallPlnrAriUpd.refEq");
	else if (ix == CALLPLNRARRAENVMOD_ARREQ) return("CallPlnrArrAenvMod.arrEq");
	else if (ix == CALLPLNRARRMOD) return("CallPlnrArrMod");
	else if (ix == CALLPLNRARRMOD_TPOEQ) return("CallPlnrArrMod.tpoEq");
	else if (ix == CALLPLNRARRUPD_REFEQ) return("CallPlnrArrUpd.refEq");
	else if (ix == CALLPLNRBLKMOD) return("CallPlnrBlkMod");
	else if (ix == CALLPLNRBLKMOD_DSNEQ) return("CallPlnrBlkMod.dsnEq");
	else if (ix == CALLPLNRBLKMOD_LYREQ) return("CallPlnrBlkMod.lyrEq");
	else if (ix == CALLPLNRBLKMOD_SRUEQ) return("CallPlnrBlkMod.sruEq");
	else if (ix == CALLPLNRBLKUPD_REFEQ) return("CallPlnrBlkUpd.refEq");
	else if (ix == CALLPLNRBOOLVALPRESET) return("CallPlnrBoolvalPreSet");
	else if (ix == CALLPLNRCALAENVMOD_CALEQ) return("CallPlnrCalAenvMod.calEq");
	else if (ix == CALLPLNRCALAPARMOD_CALEQ) return("CallPlnrCalAparMod.calEq");
	else if (ix == CALLPLNRCALMOD) return("CallPlnrCalMod");
	else if (ix == CALLPLNRCALMOD_PRJEQ) return("CallPlnrCalMod.prjEq");
	else if (ix == CALLPLNRCALMOD_SUPEQ) return("CallPlnrCalMod.supEq");
	else if (ix == CALLPLNRCALMOD_TPLEQ) return("CallPlnrCalMod.tplEq");
	else if (ix == CALLPLNRCALRDOMMOD_CALEQ) return("CallPlnrCalRdomMod.calEq");
	else if (ix == CALLPLNRCALRDOMMOD_DOMEQ) return("CallPlnrCalRdomMod.domEq");
	else if (ix == CALLPLNRCALRFILMOD_CALEQ) return("CallPlnrCalRfilMod.calEq");
	else if (ix == CALLPLNRCALRFILMOD_FILEQ) return("CallPlnrCalRfilMod.filEq");
	else if (ix == CALLPLNRCALUPD_REFEQ) return("CallPlnrCalUpd.refEq");
	else if (ix == CALLPLNRCLIMOD) return("CallPlnrCliMod");
	else if (ix == CALLPLNRCLIMOD_CALEQ) return("CallPlnrCliMod.calEq");
	else if (ix == CALLPLNRCLIUPD_REFEQ) return("CallPlnrCliUpd.refEq");
	else if (ix == CALLPLNRCNTAPARMOD_USREQ) return("CallPlnrCntAparMod.usrEq");
	else if (ix == CALLPLNRCRDACTIVE) return("CallPlnrCrdActive");
	else if (ix == CALLPLNRCRDCLOSE) return("CallPlnrCrdClose");
	else if (ix == CALLPLNRCRDOPEN) return("CallPlnrCrdOpen");
	else if (ix == CALLPLNRDBLVALPRESET) return("CallPlnrDblvalPreSet");
	else if (ix == CALLPLNRDEVAPARMOD_DEVEQ) return("CallPlnrDevAparMod.devEq");
	else if (ix == CALLPLNRDEVAPARMOD_DSNEQ) return("CallPlnrDevAparMod.dsnEq");
	else if (ix == CALLPLNRDEVJMODMOD_DEVEQ) return("CallPlnrDevJmodMod.devEq");
	else if (ix == CALLPLNRDEVMOD) return("CallPlnrDevMod");
	else if (ix == CALLPLNRDEVMOD_DSNEQ) return("CallPlnrDevMod.dsnEq");
	else if (ix == CALLPLNRDEVMOD_SUPEQ) return("CallPlnrDevMod.supEq");
	else if (ix == CALLPLNRDEVMOD_TPLEQ) return("CallPlnrDevMod.tplEq");
	else if (ix == CALLPLNRDEVUPD_REFEQ) return("CallPlnrDevUpd.refEq");
	else if (ix == CALLPLNRDGDJMOD_DGDEQ) return("CallPlnrDgdJMod.dgdEq");
	else if (ix == CALLPLNRDGDMOD) return("CallPlnrDgdMod");
	else if (ix == CALLPLNRDGDMOD_DSNEQ) return("CallPlnrDgdMod.dsnEq");
	else if (ix == CALLPLNRDGDUPD_REFEQ) return("CallPlnrDgdUpd.refEq");
	else if (ix == CALLPLNRDLGCLOSE) return("CallPlnrDlgClose");
	else if (ix == CALLPLNRDOMJMOD_DOMEQ) return("CallPlnrDomJMod.domEq");
	else if (ix == CALLPLNRDOMMOD) return("CallPlnrDomMod");
	else if (ix == CALLPLNRDOMMOD_DSNEQ) return("CallPlnrDomMod.dsnEq");
	else if (ix == CALLPLNRDOMUPD_REFEQ) return("CallPlnrDomUpd.refEq");
	else if (ix == CALLPLNRDSN_DIMEQ) return("CallPlnrDsn.dimEq");
	else if (ix == CALLPLNRDSN_MODEQ) return("CallPlnrDsn.modEq");
	else if (ix == CALLPLNRDSN_TYPEQ) return("CallPlnrDsn.typEq");
	else if (ix == CALLPLNRDSNMOD) return("CallPlnrDsnMod");
	else if (ix == CALLPLNRDSNMOD_DRVEQ) return("CallPlnrDsnMod.drvEq");
	else if (ix == CALLPLNRDSNMOD_MODEQ) return("CallPlnrDsnMod.modEq");
	else if (ix == CALLPLNRDSNMOD_PRJEQ) return("CallPlnrDsnMod.prjEq");
	else if (ix == CALLPLNRDSNMOD_RETREUEQ) return("CallPlnrDsnMod.retReuEq");
	else if (ix == CALLPLNRDSNUPD_REFEQ) return("CallPlnrDsnUpd.refEq");
	else if (ix == CALLPLNRFCEMOD) return("CallPlnrFceMod");
	else if (ix == CALLPLNRFCEMOD_DFCEQ) return("CallPlnrFceMod.dfcEq");
	else if (ix == CALLPLNRFCEMOD_SRUEQ) return("CallPlnrFceMod.sruEq");
	else if (ix == CALLPLNRFCERVTXMOD_FCEEQ) return("CallPlnrFceRvtxMod.fceEq");
	else if (ix == CALLPLNRFCERVTXMOD_VTXEQ) return("CallPlnrFceRvtxMod.vtxEq");
	else if (ix == CALLPLNRFCEUPD_REFEQ) return("CallPlnrFceUpd.refEq");
	else if (ix == CALLPLNRFIL_CLUEQ) return("CallPlnrFil.cluEq");
	else if (ix == CALLPLNRFILMOD) return("CallPlnrFilMod");
	else if (ix == CALLPLNRFILMOD_CLUEQ) return("CallPlnrFilMod.cluEq");
	else if (ix == CALLPLNRFILMOD_RETREUEQ) return("CallPlnrFilMod.retReuEq");
	else if (ix == CALLPLNRFILUPD_REFEQ) return("CallPlnrFilUpd.refEq");
	else if (ix == CALLPLNRHUSRRUNVMOD_CRDUSREQ) return("CallPlnrHusrRunvMod.crdUsrEq");
	else if (ix == CALLPLNRINTVALPRESET) return("CallPlnrIntvalPreSet");
	else if (ix == CALLPLNRIXPRESET) return("CallPlnrIxPreSet");
	else if (ix == CALLPLNRKLKJKEYMOD_KLSAKEYEQ) return("CallPlnrKlkJkeyMod.klsAkeyEq");
	else if (ix == CALLPLNRKLSAKEYMOD_KLSEQ) return("CallPlnrKlsAkeyMod.klsEq");
	else if (ix == CALLPLNRKLSAKEYMOD_KLSMTBURFEQ) return("CallPlnrKlsAkeyMod.klsMtbUrfEq");
	else if (ix == CALLPLNRLGDMOD) return("CallPlnrLgdMod");
	else if (ix == CALLPLNRLGDMOD_HKTHKUEQ) return("CallPlnrLgdMod.hktHkuEq");
	else if (ix == CALLPLNRLGDRLGDMOD_DSLEQ) return("CallPlnrLgdRlgdMod.dslEq");
	else if (ix == CALLPLNRLGDRLGDMOD_DVLEQ) return("CallPlnrLgdRlgdMod.dvlEq");
	else if (ix == CALLPLNRLGDRVTXMOD_LGDEQ) return("CallPlnrLgdRvtxMod.lgdEq");
	else if (ix == CALLPLNRLGDRVTXMOD_VTXEQ) return("CallPlnrLgdRvtxMod.vtxEq");
	else if (ix == CALLPLNRLGDUPD_REFEQ) return("CallPlnrLgdUpd.refEq");
	else if (ix == CALLPLNRLOG) return("CallPlnrLog");
	else if (ix == CALLPLNRLOGOUT) return("CallPlnrLogout");
	else if (ix == CALLPLNRLVLJZMOD_LVLEQ) return("CallPlnrLvlJzMod.lvlEq");
	else if (ix == CALLPLNRLVLMOD) return("CallPlnrLvlMod");
	else if (ix == CALLPLNRLVLMOD_HKTHKUEQ) return("CallPlnrLvlMod.hktHkuEq");
	else if (ix == CALLPLNRLVLRLVLMOD_DLVEQ) return("CallPlnrLvlRlvlMod.dlvEq");
	else if (ix == CALLPLNRLVLRLVLMOD_SLVEQ) return("CallPlnrLvlRlvlMod.slvEq");
	else if (ix == CALLPLNRLVLUPD_REFEQ) return("CallPlnrLvlUpd.refEq");
	else if (ix == CALLPLNRLYRJMATMOD_LYREQ) return("CallPlnrLyrJmatMod.lyrEq");
	else if (ix == CALLPLNRLYRJMOD_LYREQ) return("CallPlnrLyrJMod.lyrEq");
	else if (ix == CALLPLNRLYRMOD) return("CallPlnrLyrMod");
	else if (ix == CALLPLNRLYRMOD_HKTHKUEQ) return("CallPlnrLyrMod.hktHkuEq");
	else if (ix == CALLPLNRLYRMOD_MATEQ) return("CallPlnrLyrMod.matEq");
	else if (ix == CALLPLNRLYRRSRUMOD_LYREQ) return("CallPlnrLyrRsruMod.lyrEq");
	else if (ix == CALLPLNRLYRRSRUMOD_SRUEQ) return("CallPlnrLyrRsruMod.sruEq");
	else if (ix == CALLPLNRLYRUPD_REFEQ) return("CallPlnrLyrUpd.refEq");
	else if (ix == CALLPLNRMASTCLAIM) return("CallPlnrMastClaim");
	else if (ix == CALLPLNRMASTSLVCHG) return("CallPlnrMastslvChg");
	else if (ix == CALLPLNRMATAPARMOD_DSNEQ) return("CallPlnrMatAparMod.dsnEq");
	else if (ix == CALLPLNRMATAPARMOD_MATEQ) return("CallPlnrMatAparMod.matEq");
	else if (ix == CALLPLNRMATMOD) return("CallPlnrMatMod");
	else if (ix == CALLPLNRMATMOD_CALEQ) return("CallPlnrMatMod.calEq");
	else if (ix == CALLPLNRMATMOD_SUPEQ) return("CallPlnrMatMod.supEq");
	else if (ix == CALLPLNRMATUPD_REFEQ) return("CallPlnrMatUpd.refEq");
	else if (ix == CALLPLNRPRJJSTEMOD_PRJEQ) return("CallPlnrPrjJsteMod.prjEq");
	else if (ix == CALLPLNRPRJMOD) return("CallPlnrPrjMod");
	else if (ix == CALLPLNRPRJRTPOMOD_PRJEQ) return("CallPlnrPrjRtpoMod.prjEq");
	else if (ix == CALLPLNRPRJRTPOMOD_TPOEQ) return("CallPlnrPrjRtpoMod.tpoEq");
	else if (ix == CALLPLNRPRJUPD_REFEQ) return("CallPlnrPrjUpd.refEq");
	else if (ix == CALLPLNRPRSADETMOD_PRSEQ) return("CallPlnrPrsAdetMod.prsEq");
	else if (ix == CALLPLNRPRSJLNMMOD_PRSEQ) return("CallPlnrPrsJlnmMod.prsEq");
	else if (ix == CALLPLNRPRSMOD) return("CallPlnrPrsMod");
	else if (ix == CALLPLNRPRSUPD_REFEQ) return("CallPlnrPrsUpd.refEq");
	else if (ix == CALLPLNRREFPRESET) return("CallPlnrRefPreSet");
	else if (ix == CALLPLNRREFSPRESET) return("CallPlnrRefsPreSet");
	else if (ix == CALLPLNRRTCMOD) return("CallPlnrRtcMod");
	else if (ix == CALLPLNRRTCMOD_DSNEQ) return("CallPlnrRtcMod.dsnEq");
	else if (ix == CALLPLNRRTCMOD_HKTHKUEQ) return("CallPlnrRtcMod.hktHkuEq");
	else if (ix == CALLPLNRRTCMOD_LYREQ) return("CallPlnrRtcMod.lyrEq");
	else if (ix == CALLPLNRRTCUPD_REFEQ) return("CallPlnrRtcUpd.refEq");
	else if (ix == CALLPLNRSESMOD) return("CallPlnrSesMod");
	else if (ix == CALLPLNRSESMOD_USREQ) return("CallPlnrSesMod.usrEq");
	else if (ix == CALLPLNRSESUPD_REFEQ) return("CallPlnrSesUpd.refEq");
	else if (ix == CALLPLNRSREFPRESET) return("CallPlnrSrefPreSet");
	else if (ix == CALLPLNRSRUMOD) return("CallPlnrSruMod");
	else if (ix == CALLPLNRSRUMOD_HKTHKUEQ) return("CallPlnrSruMod.hktHkuEq");
	else if (ix == CALLPLNRSRUUPD_REFEQ) return("CallPlnrSruUpd.refEq");
	else if (ix == CALLPLNRSTATCHG) return("CallPlnrStatChg");
	else if (ix == CALLPLNRSTGCHG) return("CallPlnrStgChg");
	else if (ix == CALLPLNRSTKJMODMOD_STKEQ) return("CallPlnrStkJmodMod.stkEq");
	else if (ix == CALLPLNRSTKJNMOD_STKEQ) return("CallPlnrStkJnMod.stkEq");
	else if (ix == CALLPLNRSTKMOD) return("CallPlnrStkMod");
	else if (ix == CALLPLNRSTKMOD_DSNEQ) return("CallPlnrStkMod.dsnEq");
	else if (ix == CALLPLNRSTKRSRUMOD_SRUEQ) return("CallPlnrStkRsruMod.sruEq");
	else if (ix == CALLPLNRSTKRSRUMOD_STKEQ) return("CallPlnrStkRsruMod.stkEq");
	else if (ix == CALLPLNRSTKUPD_REFEQ) return("CallPlnrStkUpd.refEq");
	else if (ix == CALLPLNRSTUBCHG) return("CallPlnrStubChg");
	else if (ix == CALLPLNRTPOJSTEMOD_TPOEQ) return("CallPlnrTpoJsteMod.tpoEq");
	else if (ix == CALLPLNRTPOMOD) return("CallPlnrTpoMod");
	else if (ix == CALLPLNRTPOUPD_REFEQ) return("CallPlnrTpoUpd.refEq");
	else if (ix == CALLPLNRTXTVALPRESET) return("CallPlnrTxtvalPreSet");
	else if (ix == CALLPLNRUSGAACCMOD_USGEQ) return("CallPlnrUsgAaccMod.usgEq");
	else if (ix == CALLPLNRUSGMOD) return("CallPlnrUsgMod");
	else if (ix == CALLPLNRUSGUPD_REFEQ) return("CallPlnrUsgUpd.refEq");
	else if (ix == CALLPLNRUSRAACCMOD_USREQ) return("CallPlnrUsrAaccMod.usrEq");
	else if (ix == CALLPLNRUSRJSTEMOD_USREQ) return("CallPlnrUsrJsteMod.usrEq");
	else if (ix == CALLPLNRUSRMOD) return("CallPlnrUsrMod");
	else if (ix == CALLPLNRUSRRUSGMOD_USGEQ) return("CallPlnrUsrRusgMod.usgEq");
	else if (ix == CALLPLNRUSRRUSGMOD_USREQ) return("CallPlnrUsrRusgMod.usrEq");
	else if (ix == CALLPLNRUSRUPD_REFEQ) return("CallPlnrUsrUpd.refEq");
	else if (ix == CALLPLNRVTXJMOD_VTXEQ) return("CallPlnrVtxJMod.vtxEq");
	else if (ix == CALLPLNRVTXMOD) return("CallPlnrVtxMod");
	else if (ix == CALLPLNRVTXMOD_HKTHKUEQ) return("CallPlnrVtxMod.hktHkuEq");
	else if (ix == CALLPLNRVTXRVTXMOD_DSVEQ) return("CallPlnrVtxRvtxMod.dsvEq");
	else if (ix == CALLPLNRVTXRVTXMOD_DVVEQ) return("CallPlnrVtxRvtxMod.dvvEq");
	else if (ix == CALLPLNRVTXUPD_REFEQ) return("CallPlnrVtxUpd.refEq");

	return("");
};


